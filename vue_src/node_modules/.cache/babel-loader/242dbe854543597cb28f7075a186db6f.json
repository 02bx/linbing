{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\dscjh\\Desktop\\临兵\\vue\\src\\store\\module\\user.js","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\src\\store\\module\\user.js","mtime":1572678221000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { setToken as _setToken, getToken } from '@/libs/util';\nexport default {\n  state: {\n    username: '',\n    email: '',\n    userId: '',\n    avatarImgPath: '',\n    token: getToken(),\n    access: '',\n    hasGetInfo: false\n  },\n  mutations: {\n    setAvatar: function setAvatar(state, avatarPath) {\n      state.avatarImgPath = avatarPath;\n    },\n    setUserId: function setUserId(state, id) {\n      state.userId = id;\n    },\n    setUserName: function setUserName(state, name) {\n      state.username = name;\n    },\n    setUserEmail: function setUserEmail(state, email) {\n      state.email = email;\n    },\n    setAccess: function setAccess(state, access) {\n      state.access = access;\n    },\n    setToken: function setToken(state, token) {\n      state.token = token;\n\n      _setToken(token);\n    },\n    setHasGetInfo: function setHasGetInfo(state, status) {\n      state.hasGetInfo = status;\n    }\n  },\n  getters: {\n    imagename: function imagename(state) {\n      return state.avatarImgPath;\n    }\n  }\n};",{"version":3,"sources":["C:\\Users\\dscjh\\Desktop\\临兵\\vue\\src\\store\\module\\user.js"],"names":["setToken","getToken","state","username","email","userId","avatarImgPath","token","access","hasGetInfo","mutations","setAvatar","avatarPath","setUserId","id","setUserName","name","setUserEmail","setAccess","setHasGetInfo","status","getters","imagename"],"mappings":"AACA,SAASA,QAAQ,IAARA,SAAT,EAAmBC,QAAnB,QAAmC,aAAnC;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,aAAa,EAAE,EAJV;AAKLC,IAAAA,KAAK,EAAEN,QAAQ,EALV;AAMLO,IAAAA,MAAM,EAAE,EANH;AAOLC,IAAAA,UAAU,EAAE;AAPP,GADM;AAUbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SADS,qBACET,KADF,EACSU,UADT,EACqB;AAC5BV,MAAAA,KAAK,CAACI,aAAN,GAAsBM,UAAtB;AACD,KAHQ;AAITC,IAAAA,SAJS,qBAIEX,KAJF,EAISY,EAJT,EAIa;AACpBZ,MAAAA,KAAK,CAACG,MAAN,GAAeS,EAAf;AACD,KANQ;AAOTC,IAAAA,WAPS,uBAOIb,KAPJ,EAOWc,IAPX,EAOiB;AACxBd,MAAAA,KAAK,CAACC,QAAN,GAAiBa,IAAjB;AACD,KATQ;AAUTC,IAAAA,YAVS,wBAUKf,KAVL,EAUYE,KAVZ,EAUmB;AAC1BF,MAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACD,KAZQ;AAaTc,IAAAA,SAbS,qBAaEhB,KAbF,EAaSM,MAbT,EAaiB;AACxBN,MAAAA,KAAK,CAACM,MAAN,GAAeA,MAAf;AACD,KAfQ;AAgBTR,IAAAA,QAhBS,oBAgBCE,KAhBD,EAgBQK,KAhBR,EAgBe;AACtBL,MAAAA,KAAK,CAACK,KAAN,GAAcA,KAAd;;AACAP,MAAAA,SAAQ,CAACO,KAAD,CAAR;AACD,KAnBQ;AAoBTY,IAAAA,aApBS,yBAoBMjB,KApBN,EAoBakB,MApBb,EAoBqB;AAC5BlB,MAAAA,KAAK,CAACO,UAAN,GAAmBW,MAAnB;AACD;AAtBQ,GAVE;AAkCbC,EAAAA,OAAO,EAAG;AACRC,IAAAA,SAAS,EAAE,mBAAApB,KAAK;AAAA,aAAIA,KAAK,CAACI,aAAV;AAAA;AADR;AAlCG,CAAf","sourcesContent":["\nimport { setToken, getToken } from '@/libs/util'\n\nexport default {\n  state: {\n    username: '',\n    email: '',\n    userId: '',\n    avatarImgPath: '',\n    token: getToken(),\n    access: '',\n    hasGetInfo: false,\n  },\n  mutations: {\n    setAvatar (state, avatarPath) {\n      state.avatarImgPath = avatarPath\n    },\n    setUserId (state, id) {\n      state.userId = id\n    },\n    setUserName (state, name) {\n      state.username = name\n    },\n    setUserEmail (state, email) {\n      state.email = email\n    },\n    setAccess (state, access) {\n      state.access = access\n    },\n    setToken (state, token) {\n      state.token = token\n      setToken(token)\n    },\n    setHasGetInfo (state, status) {\n      state.hasGetInfo = status\n    }, \n  },\n  getters : {\n    imagename: state => state.avatarImgPath,\n  },\n}\n"]}]}