{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\components\\shownote\\shownote.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\components\\shownote\\shownote.vue","mtime":1578304381000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AES  from '@/libs/crypto'\nimport http  from '@/libs/http'\nimport {getToken } from '@/libs/util'\nimport MarkdownItVue from 'markdown-it-vue'\nexport default {\n  inject: ['reload'],\n  components: {\n    MarkdownItVue\n  },\n  data () {\n    return {\n      item: {},\n      token: getToken(),\n      username: '',\n    }\n  },\n  created () {\n    this.$nextTick(this.getParams())\n  },\n  methods: {\n    getParams () {\n      this.item = JSON.parse(JSON.stringify(this.$route.query.params))\n    },\n    edit (params) {\n      this.$router.push({\n        name:'修改笔记',\n        query:{\n          params : this.item\n        }\n      })\n    },\n    trash (item) {\n        let flag = {\n        'type': 'trash',\n        'data': '1'\n        }\n        let data = {\n            'notename': AES.Encrypt(item.notename),\n            'flag': flag,\n            'token': this.token.trim()\n        }\n        data = JSON.stringify(data)\n        let req_params = {'data': AES.Encrypt(data)}\n        http.post('/api/setflag', req_params).then((res) => {\n            res.data = eval('(' + res.data + ')')\n            switch(res.data.code ){\n            case'Z1000':\n            setTimeout(() => {\n                    this.$router.push({\n                    path: '/components/notelist'\n                    })\n                },3000)\n            break\n            case 'Z1001':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '系统发生异常,请稍后再次尝试'\n            })\n            break\n            case 'Z1002':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '系统发生异常,请稍后再次尝试'\n            })\n            break\n            case 'Z1004':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '认证失败,请稍后再次尝试'\n            })\n            break\n            default:\n            break\n            }\n        })\n      }\n    }\n}\n",{"version":3,"sources":["shownote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shownote.vue","sourceRoot":"src/view/components/shownote","sourcesContent":["<style lang=\"less\">\n  @import './shownote.less';\n</style>\n\n<template>\n  <div>\n    <Card class=\"card\">\n            <p slot=\"title\">\n                <Icon type=\"ios-book\"></Icon>\n                <span>{{item.notename}}</span>\n                <span class = \"time\">{{item.time}}</span>\n            </p>\n            <mavon-editor ref=md v-model=\"item.content\"   @keydown=\"\"  :subfield=\"false\" defaultOpen=\"preview\" :toolbarsFlag=\"false\" :editable=\"false\" :scrollStyle=\"true\" class=\"editor\"/>\n            <p>\n              <Button  type=\"info\"  @click=\"trash(item)\" size=\"small\" class=\"button\">\n                              删除\n              </Button>\n              <Button  type=\"info\"  @click=\"edit(item)\" size=\"small\" class=\"button\">\n                              编辑\n              </Button>\n            </p>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport AES  from '@/libs/crypto'\nimport http  from '@/libs/http'\nimport {getToken } from '@/libs/util'\nimport MarkdownItVue from 'markdown-it-vue'\nexport default {\n  inject: ['reload'],\n  components: {\n    MarkdownItVue\n  },\n  data () {\n    return {\n      item: {},\n      token: getToken(),\n      username: '',\n    }\n  },\n  created () {\n    this.$nextTick(this.getParams())\n  },\n  methods: {\n    getParams () {\n      this.item = JSON.parse(JSON.stringify(this.$route.query.params))\n    },\n    edit (params) {\n      this.$router.push({\n        name:'修改笔记',\n        query:{\n          params : this.item\n        }\n      })\n    },\n    trash (item) {\n        let flag = {\n        'type': 'trash',\n        'data': '1'\n        }\n        let data = {\n            'notename': AES.Encrypt(item.notename),\n            'flag': flag,\n            'token': this.token.trim()\n        }\n        data = JSON.stringify(data)\n        let req_params = {'data': AES.Encrypt(data)}\n        http.post('/api/setflag', req_params).then((res) => {\n            res.data = eval('(' + res.data + ')')\n            switch(res.data.code ){\n            case'Z1000':\n            setTimeout(() => {\n                    this.$router.push({\n                    path: '/components/notelist'\n                    })\n                },3000)\n            break\n            case 'Z1001':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '系统发生异常,请稍后再次尝试'\n            })\n            break\n            case 'Z1002':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '系统发生异常,请稍后再次尝试'\n            })\n            break\n            case 'Z1004':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '认证失败,请稍后再次尝试'\n            })\n            break\n            default:\n            break\n            }\n        })\n      }\n    }\n}\n</script>\n\n"]}]}