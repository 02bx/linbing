{"remainingRequest":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js!/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/zhenjinote/note/gaizao/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/zhenjinote/note/gaizao/src/view/components/notelist/notelist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/zhenjinote/note/gaizao/src/view/components/notelist/notelist.vue","mtime":1567834317528},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/.babelrc","mtime":1569934280915},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AES from '@/libs/crypto';\nimport http from '@/libs/http';\nimport { getToken } from '@/libs/util';\nexport default {\n  inject: ['reload'],\n  name: 'tables_page',\n  data: function data() {\n    var _this = this;\n\n    return {\n      token: getToken(),\n      page: {\n        pageNum: 1,\n        pageSize: 5,\n        count: ''\n      },\n      columns: [{\n        title: '笔记名字',\n        key: 'notename',\n        sortable: true\n      }, {\n        title: '笔记内容',\n        key: 'content',\n        editable: true\n      }, {\n        title: '创建时间',\n        key: 'time'\n      }, {\n        title: '操作',\n        key: 'action',\n        width: 300,\n        align: 'center',\n        render: function render(h, params) {\n          return h('div', [h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            style: {\n              marginRight: '20px'\n            },\n            on: {\n              click: function click() {\n                _this.show(params);\n              }\n            }\n          }, '查看'), h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            style: {\n              marginRight: '20px'\n            },\n            on: {\n              click: function click() {\n                _this.edit(params);\n              }\n            }\n          }, '修改'), h('Button', {\n            props: {\n              type: 'error',\n              size: 'small'\n            },\n            on: {\n              click: function click() {\n                _this.remove(params);\n              }\n            }\n          }, '删除')]);\n        }\n      }],\n      tableData: []\n    };\n  },\n  methods: {\n    getTableData: function getTableData() {\n      var _this2 = this;\n\n      var flag = {\n        'type': 'trash',\n        'data': '0'\n      };\n      var data = {\n        'pagenum': this.page.pageNum,\n        'pagesize': this.page.pageSize,\n        'flag': flag,\n        'token': this.token.trim()\n      };\n      data = JSON.stringify(data);\n      var params = {\n        'data': AES.Encrypt(data)\n      };\n      http.post('/api/notelist', params).then(function (res) {\n        res.data = eval('(' + res.data + ')');\n\n        switch (res.data.code) {\n          case 'Z1000':\n            _this2.tableData = res.data.data;\n            break;\n\n          case 'Z1001':\n            _this2.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1002':\n            _this2.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1004':\n            _this2.$Notice.error({\n              title: '获取数据失败',\n              desc: '认证失败,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1009':\n            _this2.$Notice.info({\n              title: '数据为空',\n              desc: '数据为空,请新建笔记'\n            });\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    },\n    exportExcel: function exportExcel() {\n      this.$refs.tables.exportCsv({\n        filename: \"table-\".concat(new Date().valueOf(), \".csv\")\n      });\n    },\n    show: function show(params) {\n      this.$router.push({\n        name: '笔记详情',\n        query: {\n          params: params['row']\n        }\n      });\n    },\n    edit: function edit(params) {\n      this.$router.push({\n        name: '修改笔记',\n        query: {\n          params: params['row']\n        }\n      });\n    },\n    remove: function remove(params) {\n      var _this3 = this;\n\n      var flag = {\n        'type': 'trash',\n        'data': '1'\n      };\n      var data = {\n        'notename': AES.Encrypt(params.row.notename),\n        'flag': flag,\n        'token': this.token.trim()\n      };\n      data = JSON.stringify(data);\n      var req_params = {\n        'data': AES.Encrypt(data)\n      };\n      http.post('/api/setflag', req_params).then(function (res) {\n        res.data = eval('(' + res.data + ')');\n\n        switch (res.data.code) {\n          case 'Z1000':\n            _this3.reload();\n\n            break;\n\n          case 'Z1001':\n            _this3.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1002':\n            _this3.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1004':\n            _this3.$Notice.error({\n              title: '请求失败',\n              desc: '认证失败,请稍后再次尝试'\n            });\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    },\n    handlePage: function handlePage(pageNum) {\n      this.page.pageNum = pageNum;\n      console.log(this.page.pageNum);\n      this.getTableData();\n    },\n    handlePageSize: function handlePageSize(pageSize) {\n      this.page.pageSize = pageSize;\n      this.getTableData();\n    }\n  },\n  mounted: function mounted() {\n    this.getTableData();\n  }\n};",{"version":3,"sources":["notelist.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Card>\n      <Table   border  editable searchable search-place=\"top\" :data=\"tableData\" :columns=\"columns\"/>\n      <Page\n          class=\"page\" \n          :current=\"this.page.pageNum\" \n          :page-size=\"this.page.pageSize\" \n          :total=\"this.page.count\" \n          :page-size-opts=\"[5,10]\"\n          show-sizer\n          show-elevator\n          show-total\n          @on-change=\"handlePage\"\n          @on-page-size-change=\"handlePageSize\">\n      </Page>\n      <Button style=\"margin: 10px 0;\" type=\"primary\" @click=\"exportExcel\">导出为Csv文件</Button>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport AES  from '@/libs/crypto'\nimport http  from '@/libs/http'\nimport {getToken } from '@/libs/util'\nexport default {\n  inject: ['reload'],\n  name: 'tables_page',\n  data () {\n    return {\n      token: getToken(),\n      page: {\n          pageNum: 1,\n          pageSize: 5,\n          count: ''\n      },\n      columns: [\n        { \n          title: '笔记名字',\n          key: 'notename', \n          sortable: true \n        },\n        { \n          title: '笔记内容', \n          key: 'content', \n          editable: true \n        },\n        { \n          title: '创建时间', \n          key: 'time' \n          },\n        {\n          title: '操作',\n          key: 'action',\n          width: 300,\n          align: 'center',\n          render: (h, params) => {\n            return h('div', [\n                h('Button', {\n                    props: {\n                        type: 'primary',\n                        size: 'small'\n                    },\n                    style: {\n                        marginRight: '20px'\n                    },\n                    on: {\n                        click: () => {\n                            this.show(params)\n                        }\n                    }\n                }, '查看'),\n                h('Button', {\n                    props: {\n                        type: 'primary',\n                        size: 'small'\n                    },\n                    style: {\n                        marginRight: '20px'\n                    },\n                    on: {\n                        click: () => {\n                            this.edit(params)\n                        }\n                    }\n                }, '修改'),\n                h('Button', {\n                    props: {\n                        type: 'error',\n                        size: 'small'\n                    },\n                    on: {\n                        click: () => {\n                            this.remove(params)\n                        }\n                    }\n                }, '删除')\n            ]);\n        }\n      }\n      ],\n      tableData: []\n    }\n  },\n  methods: {\n    getTableData () {\n      let flag = {\n        'type': 'trash',\n        'data': '0'\n      }\n      let data = {\n        'pagenum': this.page.pageNum,\n        'pagesize': this.page.pageSize,\n        'flag': flag,\n        'token': this.token.trim()\n      }\n      data = JSON.stringify(data)\n      let params = {'data': AES.Encrypt(data)}\n      http.post('/api/notelist', params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          this.tableData = res.data.data\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1004':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '认证失败,请稍后再次尝试'\n          })\n          break\n          case 'Z1009':\n          this.$Notice.info({\n              title: '数据为空',\n              desc: '数据为空,请新建笔记'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    exportExcel () {\n      this.$refs.tables.exportCsv({\n        filename: `table-${(new Date()).valueOf()}.csv`\n      })\n    },\n    show (params) {\n      this.$router.push({\n        name:'笔记详情',\n        query: { \n          params : params['row']\n          } \n      })\n    },\n    edit (params) {\n      this.$router.push({\n        name:'修改笔记',\n        query:{\n          params : params['row']\n        }\n      })\n    },\n    remove (params) {\n      let flag = {\n        'type': 'trash',\n        'data': '1'\n      }\n      let data = {\n        'notename': AES.Encrypt(params.row.notename),\n        'flag': flag,\n        'token': this.token.trim()\n      }\n      data = JSON.stringify(data)\n      let req_params = {'data': AES.Encrypt(data)}\n      http.post('/api/setflag', req_params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          this.reload()\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1004':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '认证失败,请稍后再次尝试'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    handlePage (pageNum) {\n      this.page.pageNum = pageNum\n      console.log(this.page.pageNum)\n      this.getTableData()\n    },\n    handlePageSize (pageSize) {\n      this.page.pageSize = pageSize\n      this.getTableData()\n    }\n  },\n  mounted () {\n    this.getTableData()\n  },\n}\n</script>\n\n<style>\n .page{\n    border-radius: 100px;\n    padding: 10px;\n    text-align:center;\n    margin-top: 10px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n</style>\n"],"sourceRoot":"src/view/components/notelist"}]}