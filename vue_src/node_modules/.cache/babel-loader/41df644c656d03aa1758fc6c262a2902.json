{"remainingRequest":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js!/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/zhenjinote/note/gaizao/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/zhenjinote/note/gaizao/src/view/components/editnote/editnote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/zhenjinote/note/gaizao/src/view/components/editnote/editnote.vue","mtime":1567837282120},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/.babelrc","mtime":1569934280915},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport http from '@/libs/http';\nimport AES from '@/libs/crypto';\nimport { getToken } from '@/libs/util';\nexport default {\n  inject: ['reload'],\n  name: 'MarkdownEditor',\n  data: function data() {\n    return {\n      new_notename: '',\n      new_content: '',\n      old_notename: '',\n      old_content: '',\n      flag: '',\n      token: getToken(),\n      publish_flag: '0'\n    };\n  },\n  created: function created() {\n    this.nextTick(this.getParams());\n  },\n  methods: {\n    getParams: function getParams() {\n      if (this.$route.query.params.notename) {\n        this.new_notename = this.$route.query.params.notename;\n        this.new_content = this.$route.query.params.content;\n        this.old_notename = this.$route.query.params.notename;\n        this.old_content = this.$route.query.params.content;\n      }\n    },\n    handlnotename: function handlnotename() {\n      var _this = this;\n\n      if (this.new_notename == \"\") {\n        this.$Notice.error({\n          title: '笔记名字不能为空',\n          desc: '请输入笔记名字 '\n        });\n      } else {\n        var data = {\n          'type': 'notename',\n          'token': this.token,\n          'data': AES.Encrypt(this.new_notename)\n        };\n        data = JSON.stringify(data);\n        var params = {\n          'data': AES.Encrypt(data)\n        };\n        http.post('/api/query', params).then(function (res) {\n          res.data = eval('(' + res.data + ')');\n\n          switch (res.data.code) {\n            case 'Z1001':\n              _this.$Notice.error({\n                title: '系统异常',\n                desc: '系统发生异常,请稍后再次尝试'\n              });\n\n              break;\n\n            case 'Z1002':\n              _this.$Notice.error({\n                title: '请求异常',\n                desc: '请求异常,请稍后再次尝试'\n              });\n\n              break;\n\n            case 'Z1004':\n              _this.$Notice.error({\n                title: '修改失败',\n                desc: '认证失败,请稍后再次尝试'\n              });\n\n              break;\n\n            case 'Z10010':\n              if (_this.new_notename != _this.old_notename) {\n                _this.flag = '1';\n\n                _this.$Notice.error({\n                  title: '笔记已存在',\n                  desc: '笔记名字已存在,请重新输入笔记名字'\n                });\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        });\n      }\n    },\n    change: function change(status) {\n      if (status) {\n        this.publish_flag = '1';\n        console.log(this.publish_flag);\n      } else {\n        this.publish_flag = '0';\n        console.log(this.publish_flag);\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      if (this.new_notename == \"\") {\n        this.$Notice.error({\n          title: '笔记名字不能为空',\n          desc: '请输入笔记名字 '\n        });\n      } else {\n        if (this.flag == \"1\") {\n          this.$Notice.error({\n            title: '笔记已存在',\n            desc: '笔记名字已存在,请重新输入笔记名字'\n          });\n        } else {\n          if (this.new_content == \"\") {\n            this.$Notice.error({\n              title: '笔记内容不能为空',\n              desc: '请输入笔记内容'\n            });\n          } else {\n            var data = {\n              'token': this.token,\n              'old_notename': AES.Encrypt(this.old_notename),\n              'old_content': AES.Encrypt(this.old_content),\n              'new_notename': AES.Encrypt(this.new_notename),\n              'new_content': AES.Encrypt(this.new_content),\n              'publish_flag': this.publish_flag,\n              'trash_flag': '0'\n            };\n            data = JSON.stringify(data);\n            var params = {\n              'data': AES.Encrypt(data)\n            };\n            http.post('/api/editnote', params).then(function (res) {\n              res.data = eval('(' + res.data + ')');\n\n              switch (res.data.code) {\n                case 'Z1000':\n                  _this2.$Notice.success({\n                    title: '修改成功',\n                    desc: '笔记修改成功,请到笔记列表查看'\n                  });\n\n                  setTimeout(function () {\n                    _this2.$router.push({\n                      path: '/components/notelist'\n                    });\n                  }, 1000);\n                  break;\n\n                case 'Z1001':\n                  _this2.$Notice.error({\n                    title: '系统异常',\n                    desc: '系统发生异常,请稍后再次尝试'\n                  });\n\n                  break;\n\n                case 'Z1002':\n                  _this2.$Notice.error({\n                    title: '系统异常',\n                    desc: '系统发生异常,请稍后再次尝试'\n                  });\n\n                  break;\n\n                case 'Z1004':\n                  _this2.$Notice.error({\n                    title: '修改失败',\n                    desc: '认证失败,请稍后再次尝试'\n                  });\n\n                  break;\n\n                default:\n                  break;\n              }\n            });\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["editnote.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div >\n    <Input v-model=\"new_notename\" :autosize=\"true\" placeholder=\"请输入笔记名称......\" clearable style=\"width: 100%\" @on-blur = \"handlnotename()\">\n       <Icon type=\"ios-book\" slot=\"prefix\" />\n    </Input>\n    <mavon-editor v-model=\"new_content\"  :toolbars=\"toolbars\" @keydown=\"\"  class = \"editor\"/>\n    <i-switch v-model=\"publish_flag\" size=\"large\" @on-change = \"change\" class = \"switch\">\n             <span slot=\"open\">公开</span>\n             <span slot=\"close\">禁止</span>\n    </i-switch>\n    <Button @click=\"handleSubmit\" type=\"primary\" long class = \"button\">保存笔记</Button>\n  </div>\n</template>\n\n<script>\nimport http from '@/libs/http'\nimport AES from '@/libs/crypto'\nimport {getToken } from '@/libs/util'\nexport default {\n  inject: ['reload'],\n  name: 'MarkdownEditor',\n  data () {\n    return {\n      new_notename: '',\n      new_content: '',\n      old_notename: '',\n      old_content: '',\n      flag : '',\n      token: getToken(),\n      publish_flag: '0',\n    }\n  },\n  created () {\n    this.nextTick(this.getParams())\n  },\n  methods: {\n    getParams () {\n      if (this.$route.query.params.notename){\n        this.new_notename = this.$route.query.params.notename\n        this.new_content = this.$route.query.params.content\n        this.old_notename = this.$route.query.params.notename\n        this.old_content = this.$route.query.params.content\n      }    \n    },\n    handlnotename () {\n      if (this.new_notename == \"\"){\n        this.$Notice.error({\n                  title: '笔记名字不能为空',\n                  desc: '请输入笔记名字 '\n          })\n      }\n      else{\n        let data = {\n            'type': 'notename', \n            'token': this.token,\n            'data': AES.Encrypt(this.new_notename)\n        }\n        data = JSON.stringify(data)\n        let params = {'data': AES.Encrypt(data)}\n        http.post('/api/query', params).then((res) => {\n            res.data = eval('(' + res.data + ')')\n            switch(res.data.code ){\n                case 'Z1001':\n                this.$Notice.error({\n                  title: '系统异常',\n                  desc: '系统发生异常,请稍后再次尝试'\n                })\n                break\n                case 'Z1002':\n                this.$Notice.error({\n                  title: '请求异常',\n                  desc: '请求异常,请稍后再次尝试'\n                })\n                break\n                case 'Z1004':\n                this.$Notice.error({\n                  title: '修改失败',\n                  desc: '认证失败,请稍后再次尝试'\n                })\n                break\n                case 'Z10010':\n                if (this.new_notename != this.old_notename){\n                  this.flag = '1'\n                  this.$Notice.error({\n                    title: '笔记已存在',\n                    desc: '笔记名字已存在,请重新输入笔记名字'\n                  })\n                }\n                break\n                default:\n                break\n            }\n        })\n      }\n    },\n    change (status) {\n      if (status){\n        this.publish_flag = '1'\n        console.log(this.publish_flag)\n      }\n      \n      else{\n        this.publish_flag = '0'\n        console.log(this.publish_flag)\n      }\n    },\n    handleSubmit () {\n      if (this.new_notename == \"\"){\n        this.$Notice.error({\n          title: '笔记名字不能为空',\n          desc: '请输入笔记名字 '\n          })\n      }\n      else{\n        if (this.flag == \"1\"){\n          this.$Notice.error({\n            title: '笔记已存在',\n            desc: '笔记名字已存在,请重新输入笔记名字'\n          })\n        }\n        else{\n          if (this.new_content == \"\"){\n            this.$Notice.error({\n                    title: '笔记内容不能为空',\n                    desc: '请输入笔记内容'\n            })\n          }\n          else{\n            let data = {\n              'token': this.token,\n              'old_notename': AES.Encrypt(this.old_notename),\n              'old_content': AES.Encrypt(this.old_content),\n              'new_notename': AES.Encrypt(this.new_notename),\n              'new_content': AES.Encrypt(this.new_content),\n              'publish_flag': this.publish_flag,\n              'trash_flag': '0',\n            }\n            data = JSON.stringify(data)\n            let params = {'data': AES.Encrypt(data)}\n            http.post('/api/editnote', params).then((res) => {\n                res.data = eval('(' + res.data + ')')\n                switch(res.data.code ){\n                    case 'Z1000':\n                    this.$Notice.success({\n                      title: '修改成功',\n                      desc: '笔记修改成功,请到笔记列表查看'\n                    })\n                    setTimeout(() => {\n                      this.$router.push({\n                      path: '/components/notelist'\n                      })\n                    },1000)\n                    break\n                    case 'Z1001':\n                    this.$Notice.error({\n                      title: '系统异常',\n                      desc: '系统发生异常,请稍后再次尝试'\n                    })\n                    break\n                    case 'Z1002':\n                    this.$Notice.error({\n                      title: '系统异常',\n                      desc: '系统发生异常,请稍后再次尝试'\n                    })\n                    break\n                    case 'Z1004':\n                    this.$Notice.error({\n                      title: '修改失败',\n                      desc: '认证失败,请稍后再次尝试'\n                    })\n                    break\n                    default:\n                    break\n                }\n            })\n          }\n        }\n      }\n    },\n  }\n}\n</script>\n\n<style>\n    .editor {\n      margin-top:  30px !important; \n    }\n    .switch {\n       float:left;\n       margin-top:  30px !important; \n       margin-left: 90%;\n\n    }\n    .button {\n       margin-top:  30px !important; \n       \n    }\n</style>"],"sourceRoot":"src/view/components/editnote"}]}