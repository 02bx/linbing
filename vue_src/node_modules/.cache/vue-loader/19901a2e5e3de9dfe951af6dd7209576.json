{"remainingRequest":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/zhenjinote/note/vue/src/view/login/login.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/root/zhenjinote/note/vue/src/view/login/login.vue","mtime":1577182656004},{"path":"/root/zhenjinote/note/vue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/less-loader/dist/cjs.js","mtime":1561115432321},{"path":"/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n@import './login.less';\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";AACA","file":"login.vue","sourceRoot":"src/view/login","sourcesContent":["<style lang=\"less\">\n  @import './login.less';\n</style>\n\n<template>\n  <div class=\"login\">\n    <div class=\"login-con\">\n      <Card icon=\"log-in\" title=\"欢迎登录\" :bordered=\"false\">\n        <div class=\"form-con\">\n          <login-form @on-success-valid=\"handleSubmit\"></login-form>\n        </div>\n      </Card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport http from '@/libs/http'\nimport LoginForm from '_c/login-form'\nimport AES from '@/libs/crypto'\nimport store from '../../store'\nexport default {\n  components: {\n    LoginForm\n  },\n  methods: {\n    handleSubmit ({ username, password }) {\n      let data = {\n        'username': username.trim(),\n        'password': password.trim()\n      }\n      \n      data = JSON.stringify(data)\n      let params = {'data': AES.Encrypt(data)}\n      console.log(params)\n      http.post('/api/login', params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          store.commit('setToken', res.data.data.token)\n          let data = {\n            'token': res.data.data.token.trim()\n          }\n          data = JSON.stringify(data)\n          let params = {'data': AES.Encrypt(data)}\n          http.post('/api/getuserinfo', params).then((res) => {\n            res.data = eval('(' + res.data + ')')\n            switch(res.data.code ){\n              case'Z1000':\n              this.$Notice.success({\n                  title: '登录成功',\n                  desc: '马上跳转到主页 '\n              })\n              store.commit('setUserName', res.data.data.username)\n              store.commit('setUserEmail', res.data.data.email)\n              store.commit('setAvatar', '/api/images/'+ res.data.data.avatar)\n              store.commit('setAccess',res.data.data.access)\n              store.commit('setUserId', res.data.data.user_id)\n              store.commit('setHasGetInfo', true)\n\n              setTimeout(() => {\n                this.$router.push({\n                  path: '/home'\n                })\n              },1000)\n              break\n\n              case 'Z1001':\n              this.$Notice.error({\n                  title: '登录失败',\n                  desc: '系统发生异常,请稍后再次尝试'\n              })\n              break\n\n              case 'Z1002':\n              this.$Notice.error({\n                  title: '登录失败',\n                  desc: '系统发生异常,请稍后再次尝试'\n              })\n              break\n\n              case 'Z1004':\n              this.$Notice.error({\n                  title: '登录失败',\n                  desc: '登录失败,原因是认证失败,请重新登录'\n              })\n              break\n            }\n          })\n          break\n\n          case 'Z1001':\n          this.$Notice.error({\n              title: '登录失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n\n          case 'Z1002':\n          this.$Notice.error({\n              title: '登录失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n\n          case 'Z1005':\n          this.$Notice.error({\n              title: '用户未注册',\n              desc: '请前往注册页面注册'\n          })\n          break\n\n          case 'Z1008':\n          this.$Notice.error({\n              title: '密码错误',\n              desc: '密码错误,如果忘记密码请找回密码'\n          })\n          default:\n          break\n        }\n      })\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}