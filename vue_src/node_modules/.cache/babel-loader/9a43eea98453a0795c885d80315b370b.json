{"remainingRequest":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js!/root/zhenjinote/note/gaizao/node_modules/eslint-loader/index.js??ref--13-0!/root/zhenjinote/note/gaizao/src/libs/crypto.js","dependencies":[{"path":"/root/zhenjinote/note/gaizao/src/libs/crypto.js","mtime":1564283252525},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["const CryptoJS = require('crypto-js');  //引用AES源码js\n\nconst key = CryptoJS.enc.Utf8.parse('7hs252sz34g12331'); //十六位十六进制数作为秘钥\nconst iv = CryptoJS.enc.Utf8.parse('37tAGbwSHDT34348'); //十六位十六进制数作为秘钥偏移量\n\n//解密方法\nexport function Decrypt(word) {\n    let encryptedHexStr = CryptoJS.enc.Hex.parse(word);\n    let srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);\n    let decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n    return decryptedStr.toString();\n}\n//加密方法\nexport function Encrypt(word) {\n    var srcs = CryptoJS.enc.Utf8.parse(word);\n    var encrypted = CryptoJS.AES.encrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    var hexStr = encrypted.ciphertext.toString().toUpperCase();\n    var oldHexStr = CryptoJS.enc.Hex.parse(hexStr);\n    // 将密文转为Base64的字符串\n    var base64Str = CryptoJS.enc.Base64.stringify(oldHexStr);\n    return base64Str;\n}\nexport default {\n    Decrypt,\n    Encrypt\n}\n\n",null]}