{"remainingRequest":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/zhenjinote/note/vue/src/view/publish/publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/zhenjinote/note/vue/src/view/publish/publish.vue","mtime":1572694661676},{"path":"/root/zhenjinote/note/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AES  from '@/libs/crypto'\nimport http  from '@/libs/http'\nimport MarkdownItVue from 'markdown-it-vue'\nexport default {\n  inject: ['reload'],\n  name: 'publish_page',\n  components: {\n    MarkdownItVue\n  },\n  data () {\n    return {\n      page: {\n          pageNum: 1,\n          pageSize: 5,\n          count: 0\n      },\n      tableData: []\n    }\n  },\n   filters: {\n     ellipsis (value) {\n      if (!value) {\n        return ''\n      }\n      if (value.length > 20) {\n        return value.slice(0,50) + '...'\n      }\n      return value\n    }\n  },\n  methods: {\n    getTableData () {\n      let flag = {\n        'type': 'publish',\n        'data': '1'\n      }\n      let data = {\n        'pagenum': this.page.pageNum,\n        'pagesize': this.page.pageSize,\n        'flag': flag,\n      }\n      data = JSON.stringify(data)\n      let params = {'data': AES.Encrypt(data)}\n      http.post('/api/notelist', params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          if (res.data.data !== \"\"){\n            this.tableData = res.data.data\n          }\n          this.page.count = res.data.total\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1009':\n          this.$Notice.info({\n              title: '数据为空',\n              desc: '数据为空,请新建笔记'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    show (params) {\n      this.$router.push({\n        name:'publish_shownote',\n        query:{\n          params : params\n        }\n      })\n    },\n    handlePage (pageNum) {\n      this.page.pageNum = pageNum\n      this.getTableData()\n    },\n    handlePageSize (pageSize) {\n      this.page.pageSize = pageSize\n      this.getTableData()\n    }\n  },\n  mounted () {\n    this.getTableData()\n  },\n}\n",null]}