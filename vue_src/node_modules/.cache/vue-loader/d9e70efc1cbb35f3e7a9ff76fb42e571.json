{"remainingRequest":"/root/zhenjinote/note/gaizao/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/zhenjinote/note/gaizao/src/view/components/editnote/editnote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/zhenjinote/note/gaizao/src/view/components/editnote/editnote.vue","mtime":1567837282120},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/gaizao/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport http from '@/libs/http'\nimport AES from '@/libs/crypto'\nimport {getToken } from '@/libs/util'\nexport default {\n  inject: ['reload'],\n  name: 'MarkdownEditor',\n  data () {\n    return {\n      new_notename: '',\n      new_content: '',\n      old_notename: '',\n      old_content: '',\n      flag : '',\n      token: getToken(),\n      publish_flag: '0',\n    }\n  },\n  created () {\n    this.nextTick(this.getParams())\n  },\n  methods: {\n    getParams () {\n      if (this.$route.query.params.notename){\n        this.new_notename = this.$route.query.params.notename\n        this.new_content = this.$route.query.params.content\n        this.old_notename = this.$route.query.params.notename\n        this.old_content = this.$route.query.params.content\n      }    \n    },\n    handlnotename () {\n      if (this.new_notename == \"\"){\n        this.$Notice.error({\n                  title: '笔记名字不能为空',\n                  desc: '请输入笔记名字 '\n          })\n      }\n      else{\n        let data = {\n            'type': 'notename', \n            'token': this.token,\n            'data': AES.Encrypt(this.new_notename)\n        }\n        data = JSON.stringify(data)\n        let params = {'data': AES.Encrypt(data)}\n        http.post('/api/query', params).then((res) => {\n            res.data = eval('(' + res.data + ')')\n            switch(res.data.code ){\n                case 'Z1001':\n                this.$Notice.error({\n                  title: '系统异常',\n                  desc: '系统发生异常,请稍后再次尝试'\n                })\n                break\n                case 'Z1002':\n                this.$Notice.error({\n                  title: '请求异常',\n                  desc: '请求异常,请稍后再次尝试'\n                })\n                break\n                case 'Z1004':\n                this.$Notice.error({\n                  title: '修改失败',\n                  desc: '认证失败,请稍后再次尝试'\n                })\n                break\n                case 'Z10010':\n                if (this.new_notename != this.old_notename){\n                  this.flag = '1'\n                  this.$Notice.error({\n                    title: '笔记已存在',\n                    desc: '笔记名字已存在,请重新输入笔记名字'\n                  })\n                }\n                break\n                default:\n                break\n            }\n        })\n      }\n    },\n    change (status) {\n      if (status){\n        this.publish_flag = '1'\n        console.log(this.publish_flag)\n      }\n      \n      else{\n        this.publish_flag = '0'\n        console.log(this.publish_flag)\n      }\n    },\n    handleSubmit () {\n      if (this.new_notename == \"\"){\n        this.$Notice.error({\n          title: '笔记名字不能为空',\n          desc: '请输入笔记名字 '\n          })\n      }\n      else{\n        if (this.flag == \"1\"){\n          this.$Notice.error({\n            title: '笔记已存在',\n            desc: '笔记名字已存在,请重新输入笔记名字'\n          })\n        }\n        else{\n          if (this.new_content == \"\"){\n            this.$Notice.error({\n                    title: '笔记内容不能为空',\n                    desc: '请输入笔记内容'\n            })\n          }\n          else{\n            let data = {\n              'token': this.token,\n              'old_notename': AES.Encrypt(this.old_notename),\n              'old_content': AES.Encrypt(this.old_content),\n              'new_notename': AES.Encrypt(this.new_notename),\n              'new_content': AES.Encrypt(this.new_content),\n              'publish_flag': this.publish_flag,\n              'trash_flag': '0',\n            }\n            data = JSON.stringify(data)\n            let params = {'data': AES.Encrypt(data)}\n            http.post('/api/editnote', params).then((res) => {\n                res.data = eval('(' + res.data + ')')\n                switch(res.data.code ){\n                    case 'Z1000':\n                    this.$Notice.success({\n                      title: '修改成功',\n                      desc: '笔记修改成功,请到笔记列表查看'\n                    })\n                    setTimeout(() => {\n                      this.$router.push({\n                      path: '/components/notelist'\n                      })\n                    },1000)\n                    break\n                    case 'Z1001':\n                    this.$Notice.error({\n                      title: '系统异常',\n                      desc: '系统发生异常,请稍后再次尝试'\n                    })\n                    break\n                    case 'Z1002':\n                    this.$Notice.error({\n                      title: '系统异常',\n                      desc: '系统发生异常,请稍后再次尝试'\n                    })\n                    break\n                    case 'Z1004':\n                    this.$Notice.error({\n                      title: '修改失败',\n                      desc: '认证失败,请稍后再次尝试'\n                    })\n                    break\n                    default:\n                    break\n                }\n            })\n          }\n        }\n      }\n    },\n  }\n}\n",{"version":3,"sources":["editnote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"editnote.vue","sourceRoot":"src/view/components/editnote","sourcesContent":["<template>\n  <div >\n    <Input v-model=\"new_notename\" :autosize=\"true\" placeholder=\"请输入笔记名称......\" clearable style=\"width: 100%\" @on-blur = \"handlnotename()\">\n       <Icon type=\"ios-book\" slot=\"prefix\" />\n    </Input>\n    <mavon-editor v-model=\"new_content\"  :toolbars=\"toolbars\" @keydown=\"\"  class = \"editor\"/>\n    <i-switch v-model=\"publish_flag\" size=\"large\" @on-change = \"change\" class = \"switch\">\n             <span slot=\"open\">公开</span>\n             <span slot=\"close\">禁止</span>\n    </i-switch>\n    <Button @click=\"handleSubmit\" type=\"primary\" long class = \"button\">保存笔记</Button>\n  </div>\n</template>\n\n<script>\nimport http from '@/libs/http'\nimport AES from '@/libs/crypto'\nimport {getToken } from '@/libs/util'\nexport default {\n  inject: ['reload'],\n  name: 'MarkdownEditor',\n  data () {\n    return {\n      new_notename: '',\n      new_content: '',\n      old_notename: '',\n      old_content: '',\n      flag : '',\n      token: getToken(),\n      publish_flag: '0',\n    }\n  },\n  created () {\n    this.nextTick(this.getParams())\n  },\n  methods: {\n    getParams () {\n      if (this.$route.query.params.notename){\n        this.new_notename = this.$route.query.params.notename\n        this.new_content = this.$route.query.params.content\n        this.old_notename = this.$route.query.params.notename\n        this.old_content = this.$route.query.params.content\n      }    \n    },\n    handlnotename () {\n      if (this.new_notename == \"\"){\n        this.$Notice.error({\n                  title: '笔记名字不能为空',\n                  desc: '请输入笔记名字 '\n          })\n      }\n      else{\n        let data = {\n            'type': 'notename', \n            'token': this.token,\n            'data': AES.Encrypt(this.new_notename)\n        }\n        data = JSON.stringify(data)\n        let params = {'data': AES.Encrypt(data)}\n        http.post('/api/query', params).then((res) => {\n            res.data = eval('(' + res.data + ')')\n            switch(res.data.code ){\n                case 'Z1001':\n                this.$Notice.error({\n                  title: '系统异常',\n                  desc: '系统发生异常,请稍后再次尝试'\n                })\n                break\n                case 'Z1002':\n                this.$Notice.error({\n                  title: '请求异常',\n                  desc: '请求异常,请稍后再次尝试'\n                })\n                break\n                case 'Z1004':\n                this.$Notice.error({\n                  title: '修改失败',\n                  desc: '认证失败,请稍后再次尝试'\n                })\n                break\n                case 'Z10010':\n                if (this.new_notename != this.old_notename){\n                  this.flag = '1'\n                  this.$Notice.error({\n                    title: '笔记已存在',\n                    desc: '笔记名字已存在,请重新输入笔记名字'\n                  })\n                }\n                break\n                default:\n                break\n            }\n        })\n      }\n    },\n    change (status) {\n      if (status){\n        this.publish_flag = '1'\n        console.log(this.publish_flag)\n      }\n      \n      else{\n        this.publish_flag = '0'\n        console.log(this.publish_flag)\n      }\n    },\n    handleSubmit () {\n      if (this.new_notename == \"\"){\n        this.$Notice.error({\n          title: '笔记名字不能为空',\n          desc: '请输入笔记名字 '\n          })\n      }\n      else{\n        if (this.flag == \"1\"){\n          this.$Notice.error({\n            title: '笔记已存在',\n            desc: '笔记名字已存在,请重新输入笔记名字'\n          })\n        }\n        else{\n          if (this.new_content == \"\"){\n            this.$Notice.error({\n                    title: '笔记内容不能为空',\n                    desc: '请输入笔记内容'\n            })\n          }\n          else{\n            let data = {\n              'token': this.token,\n              'old_notename': AES.Encrypt(this.old_notename),\n              'old_content': AES.Encrypt(this.old_content),\n              'new_notename': AES.Encrypt(this.new_notename),\n              'new_content': AES.Encrypt(this.new_content),\n              'publish_flag': this.publish_flag,\n              'trash_flag': '0',\n            }\n            data = JSON.stringify(data)\n            let params = {'data': AES.Encrypt(data)}\n            http.post('/api/editnote', params).then((res) => {\n                res.data = eval('(' + res.data + ')')\n                switch(res.data.code ){\n                    case 'Z1000':\n                    this.$Notice.success({\n                      title: '修改成功',\n                      desc: '笔记修改成功,请到笔记列表查看'\n                    })\n                    setTimeout(() => {\n                      this.$router.push({\n                      path: '/components/notelist'\n                      })\n                    },1000)\n                    break\n                    case 'Z1001':\n                    this.$Notice.error({\n                      title: '系统异常',\n                      desc: '系统发生异常,请稍后再次尝试'\n                    })\n                    break\n                    case 'Z1002':\n                    this.$Notice.error({\n                      title: '系统异常',\n                      desc: '系统发生异常,请稍后再次尝试'\n                    })\n                    break\n                    case 'Z1004':\n                    this.$Notice.error({\n                      title: '修改失败',\n                      desc: '认证失败,请稍后再次尝试'\n                    })\n                    break\n                    default:\n                    break\n                }\n            })\n          }\n        }\n      }\n    },\n  }\n}\n</script>\n\n<style>\n    .editor {\n      margin-top:  30px !important; \n    }\n    .switch {\n       float:left;\n       margin-top:  30px !important; \n       margin-left: 90%;\n\n    }\n    .button {\n       margin-top:  30px !important; \n       \n    }\n</style>"]}]}