{"remainingRequest":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/zhenjinote/note/vue/src/view/publish/publish.vue?vue&type=style&index=0&rel=stylesheet%2Fscss&lang=scss&","dependencies":[{"path":"/root/zhenjinote/note/vue/src/view/publish/publish.vue","mtime":1570016725879},{"path":"/root/zhenjinote/note/vue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n .container {\n    margin: 0px;\n    overflow: hidden;\n    height: 100vh;\n}\n  .card{\n    border-radius: 10px;\n    padding: 10px;\n    text-align:center;\n    margin-top: 10px;\n  }\n  .button{\n    float: right;\n    margin-top: -12px;\n    margin-left: 50px\n}\n",{"version":3,"sources":["publish.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"publish.vue","sourceRoot":"src/view/publish","sourcesContent":["<template>\n  <div class=\"container\">\n      <Layout :style=\"{marginLeft: '20%', marginRight: '20%'}\">\n        <Content :style=\"{padding: '0 16px 16px'}\">\n          <Breadcrumb :style=\"{margin: '16px 0', overflow: 'auto'}\">\n            <BreadcrumbItem>\n            笔记博客列表\n            </BreadcrumbItem>\n          </Breadcrumb>\n          <ul>\n            <li v-for=\"item in tableData\" :key=\"item\" style=\"higth: 50px\">\n              <Card class=\"card\">\n                <p slot=\"title\">\n                  <Icon type=\"ios-book\"></Icon>\n                  <span>{{item.notename}}</span>\n                  <span class = \"time\">{{item.time}}</span>\n                </p>\n                <p>\n                <markdown-it-vue class = \"md-body\" :content = \"item.content\"/>\n                <Button  type=\"info\"  @click=\"shownote(item)\" size=\"small\" class=\"button\">\n                        查看详情\n                </Button>\n                </p>\n              </Card>\n            </li>\n          </ul>\n          <Page\n            class=\"info\"\n            :current=\"this.page.pageNum\"\n            :page-size=\"this.page.pageSize\"\n            :total=\"this.page.count\"\n            :page-size-opts=\"[5,10]\"\n            show-sizer\n            show-elevator\n            show-total\n            @on-change=\"handlePage\"\n            @on-page-size-change=\"handlePageSize\">\n          </Page>\n        </content>\n      </layout>\n  </div>\n</template>\n\n<script>\nimport AES  from '@/libs/crypto'\nimport http  from '@/libs/http'\nimport MarkdownItVue from 'markdown-it-vue'\nexport default {\n  inject: ['reload'],\n  name: 'publish_page',\n  components: {\n    MarkdownItVue\n  },\n  data () {\n    return {\n      page: {\n          pageNum: 1,\n          pageSize: 5,\n          count: 0\n      },\n      tableData: []\n    }\n  },\n  methods: {\n    getTableData () {\n      let flag = {\n        'type': 'publish',\n        'data': '1'\n      }\n      let data = {\n        'pagenum': this.page.pageNum,\n        'pagesize': this.page.pageSize,\n        'flag': flag,\n      }\n      data = JSON.stringify(data)\n      let params = {'data': AES.Encrypt(data)}\n      http.post('/api/notelist', params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          if (res.data.data !== \"\"){\n              console.log(res.data.data)\n            this.tableData = res.data.data\n          }\n          this.page.count = res.data.total\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1009':\n          this.$Notice.info({\n              title: '数据为空',\n              desc: '数据为空,请新建笔记'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    show (params) {\n      this.$router.push({\n        name:'笔记详情',\n        query:{\n          params : params['row']\n        }\n      })\n    },\n    handlePage (pageNum) {\n      this.page.pageNum = pageNum\n      this.getTableData()\n    },\n    handlePageSize (pageSize) {\n      this.page.pageSize = pageSize\n      this.getTableData()\n    }\n  },\n  mounted () {\n    this.getTableData()\n  },\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n .container {\n    margin: 0px;\n    overflow: hidden;\n    height: 100vh;\n}\n  .card{\n    border-radius: 10px;\n    padding: 10px;\n    text-align:center;\n    margin-top: 10px;\n  }\n  .button{\n    float: right;\n    margin-top: -12px;\n    margin-left: 50px\n}\n</style>"]}]}