{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\libs\\http.js","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\libs\\http.js","mtime":1578482697422},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport qs from 'qs';\naxios.defaults.timeout = 5000; //响应时间\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'; //配置请求头\n\naxios.defaults.baseURL = ''; //配置接口地址\n//POST传参序列化(添加请求拦截器)\n\naxios.interceptors.request.use(function (config) {\n  //在发送请求之前做某件事\n  if (config.method === 'post') {\n    config.data = qs.stringify(config.data);\n  }\n\n  return config;\n}, function (error) {\n  //console.log('错误的传参')\n  return Promise.reject(error);\n}); //返回状态判断(添加响应拦截器)\n\naxios.interceptors.response.use(function (res) {\n  //对响应数据做些事\n  if (!res.data.success) {\n    return Promise.resolve(res);\n  }\n\n  return res;\n}, function (error) {\n  //console.log('网络异常')\n  return Promise.reject(error);\n}); //返回一个Promise(发送post请求)\n\nexport function post(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios.post(url, params).then(function (response) {\n      resolve(response);\n    }, function (err) {\n      reject(err);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n} ////返回一个Promise(发送get请求)\n\nexport function get(url, param) {\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: param\n    }).then(function (response) {\n      resolve(response);\n    }, function (err) {\n      reject(err);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\nexport default {\n  post: post,\n  get: get\n};",null]}