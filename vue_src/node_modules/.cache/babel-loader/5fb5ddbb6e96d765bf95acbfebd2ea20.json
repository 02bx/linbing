{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\publish\\publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\publish\\publish.vue","mtime":1578383939737},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport RSA from '@/libs/crypto';\nimport http from '@/libs/http';\nimport MarkdownItVue from 'markdown-it-vue';\nexport default {\n  inject: ['reload'],\n  name: 'publish_page',\n  components: {\n    MarkdownItVue: MarkdownItVue\n  },\n  data: function data() {\n    return {\n      page: {\n        pageNum: 1,\n        pageSize: 5,\n        count: 0\n      },\n      tableData: []\n    };\n  },\n  filters: {\n    ellipsis: function ellipsis(value) {\n      if (!value) {\n        return '';\n      }\n\n      if (value.length > 20) {\n        return value.slice(0, 50) + '...';\n      }\n\n      return value;\n    }\n  },\n  methods: {\n    getTableData: function getTableData() {\n      var _this = this;\n\n      var flag = {\n        'type': 'publish',\n        'data': '1'\n      };\n      var data = {\n        'pagenum': this.page.pageNum,\n        'pagesize': this.page.pageSize,\n        'flag': flag\n      };\n      data = JSON.stringify(data);\n      var params = {\n        'data': RSA.Encrypt(data)\n      };\n      http.post('/api/notelist', params).then(function (res) {\n        res.data = eval('(' + res.data + ')');\n\n        switch (res.data.code) {\n          case 'Z1000':\n            if (res.data.data !== \"\") {\n              _this.tableData = res.data.data;\n            }\n\n            _this.page.count = res.data.total;\n            break;\n\n          case 'Z1001':\n            _this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1002':\n            _this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1009':\n            _this.$Notice.info({\n              title: '数据为空',\n              desc: '数据为空,请新建笔记'\n            });\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    },\n    show: function show(params) {\n      this.$router.push({\n        name: 'publish_shownote',\n        query: {\n          params: params\n        }\n      });\n    },\n    handlePage: function handlePage(pageNum) {\n      this.page.pageNum = pageNum;\n      this.getTableData();\n    },\n    handlePageSize: function handlePageSize(pageSize) {\n      this.page.pageSize = pageSize;\n      this.getTableData();\n    }\n  },\n  mounted: function mounted() {\n    this.getTableData();\n  }\n};",null]}