{"remainingRequest":"D:\\Tools\\zhenjinote\\note\\gaizao\\node_modules\\babel-loader\\lib\\index.js!D:\\Tools\\zhenjinote\\note\\gaizao\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Tools\\zhenjinote\\note\\gaizao\\src\\libs\\validate.js","dependencies":[{"path":"D:\\Tools\\zhenjinote\\note\\gaizao\\src\\libs\\validate.js","mtime":1558489590000},{"path":"D:\\Tools\\zhenjinote\\note\\gaizao\\.babelrc","mtime":1557223479000},{"path":"D:\\Tools\\zhenjinote\\note\\gaizao\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Tools\\zhenjinote\\note\\gaizao\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Tools\\zhenjinote\\note\\gaizao\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/* 是否是邮箱 */\nexport function isEmail(rule, value, callback) {\n  var reg = /^[a-z0-9](?:[-_.+]?[a-z0-9]+)*@.*?\\.com$/;\n\n  if (!reg.test(value.trim())) {\n    return callback(new Error('请输入合法邮箱'));\n  }\n}\n/* 是否是邮箱 */\n\nexport function isWscnEmail(str) {\n  var reg = /^[a-z0-9](?:[-_.+]?[a-z0-9]+)*@.*?\\.com$/;\n  return reg.test(str.trim());\n}\n/* 是否是用户名 */\n\nexport function isUsername(rule, value, callback) {\n  var reg = /^[a-z0-9](?:[-_.+]?[a-z0-9]+)*@.*?\\.com$/;\n\n  if (!reg.test(value.trim())) {\n    if (!value) {\n      return callback(new Error('账号不可以为空'));\n    }\n  }\n}\n/* 密码长度是否达到要求 */\n\nexport function ischeckNum(rule, value, callback) {\n  if (!value) {\n    return callback(new Error('注册码不可以为空'));\n  }\n\n  if (value.length < 6) {\n    return callback(new Error('注册码长度不能小于6位'));\n  }\n}\n/* 密码长度是否达到要求 */\n\nexport function isPassword(rule, value, callback) {\n  if (!value) {\n    return callback(new Error('密码不可以为空'));\n  }\n\n  if (value.length < 8) {\n    return callback(new Error('密码长度不能小于8位'));\n  }\n}",{"version":3,"sources":["D:\\Tools\\zhenjinote\\note\\gaizao\\src\\libs\\validate.js"],"names":["isEmail","rule","value","callback","reg","test","trim","Error","isWscnEmail","str","isUsername","ischeckNum","length","isPassword"],"mappings":"AAAA;AACA,OAAO,SAASA,OAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyC;AAC5C,MAAMC,GAAG,GAAG,0CAAZ;;AACA,MAAG,CAACA,GAAG,CAACC,IAAJ,CAASH,KAAK,CAACI,IAAN,EAAT,CAAJ,EAA4B;AACxB,WAAOH,QAAQ,CAAC,IAAII,KAAJ,CAAU,SAAV,CAAD,CAAf;AACH;AACF;AAEH;;AACA,OAAO,SAASC,WAAT,CAAsBC,GAAtB,EAA2B;AAC9B,MAAML,GAAG,GAAG,0CAAZ;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASI,GAAG,CAACH,IAAJ,EAAT,CAAP;AACD;AAEH;;AACA,OAAO,SAASI,UAAT,CAAqBT,IAArB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C;AAC/C,MAAMC,GAAG,GAAG,0CAAZ;;AACA,MAAG,CAACA,GAAG,CAACC,IAAJ,CAASH,KAAK,CAACI,IAAN,EAAT,CAAJ,EAA4B;AACxB,QAAI,CAACJ,KAAL,EAAY;AACR,aAAOC,QAAQ,CAAC,IAAII,KAAJ,CAAU,SAAV,CAAD,CAAf;AACH;AACJ;AACF;AAEH;;AACA,OAAO,SAASI,UAAT,CAAoBV,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2C;AAC9C,MAAI,CAACD,KAAL,EAAY;AACR,WAAOC,QAAQ,CAAC,IAAII,KAAJ,CAAU,UAAV,CAAD,CAAf;AACH;;AACD,MAAIL,KAAK,CAACU,MAAN,GAAe,CAAnB,EAAsB;AAClB,WAAOT,QAAQ,CAAC,IAAII,KAAJ,CAAU,aAAV,CAAD,CAAf;AACH;AACJ;AAED;;AACA,OAAO,SAASM,UAAT,CAAoBZ,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2C;AAC9C,MAAI,CAACD,KAAL,EAAY;AACR,WAAOC,QAAQ,CAAC,IAAII,KAAJ,CAAU,SAAV,CAAD,CAAf;AACH;;AACD,MAAIL,KAAK,CAACU,MAAN,GAAe,CAAnB,EAAsB;AAClB,WAAOT,QAAQ,CAAC,IAAII,KAAJ,CAAU,YAAV,CAAD,CAAf;AACH;AACJ","sourcesContent":["/* 是否是邮箱 */\nexport function isEmail (rule, value, callback) {\n    const reg = /^[a-z0-9](?:[-_.+]?[a-z0-9]+)*@.*?\\.com$/\n    if(!reg.test(value.trim())) {\n        return callback(new Error('请输入合法邮箱'));   \n    }\n  }\n\n/* 是否是邮箱 */\nexport function isWscnEmail (str) {\n    const reg = /^[a-z0-9](?:[-_.+]?[a-z0-9]+)*@.*?\\.com$/\n    return reg.test(str.trim())\n  }\n  \n/* 是否是用户名 */\nexport function isUsername (rule, value, callback) {\n    const reg = /^[a-z0-9](?:[-_.+]?[a-z0-9]+)*@.*?\\.com$/\n    if(!reg.test(value.trim())) {\n        if (!value) {\n            return callback(new Error('账号不可以为空'));\n        }\n    }\n  }\n\n/* 密码长度是否达到要求 */\nexport function ischeckNum(rule, value, callback) {\n    if (!value) {\n        return callback(new Error('注册码不可以为空'));\n    }\n    if (value.length < 6) {\n        return callback(new Error('注册码长度不能小于6位'))\n    }\n}\n\n/* 密码长度是否达到要求 */\nexport function isPassword(rule, value, callback) {\n    if (!value) {\n        return callback(new Error('密码不可以为空'));\n    }\n    if (value.length < 8) {\n        return callback(new Error('密码长度不能小于8位'))\n    }\n}"]}]}