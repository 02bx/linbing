{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\src\\components\\login-form\\login-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\src\\components\\login-form\\login-form.vue","mtime":1573778815000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { loginusername, ispassword } from \"../../libs/validate\";\nimport { Encrypt } from \"../../libs/crypto\";\nexport default {\n  name: 'LoginForm',\n  props: {\n    userNameRules: {\n      type: Array,\n      default: function _default() {\n        return [{\n          required: true,\n          trigger: 'blur',\n          validator: loginusername\n        }];\n      }\n    },\n    passwordRules: {\n      type: Array,\n      default: function _default() {\n        return [{\n          required: true,\n          trigger: 'blur',\n          validator: ispassword\n        }];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  computed: {\n    rules: function rules() {\n      return {\n        username: this.userNameRules,\n        password: this.passwordRules\n      };\n    }\n  },\n  methods: {\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      this.$refs.LoginForm.validate(function (valid) {\n        if (valid) {\n          _this.$emit('on-success-valid', {\n            username: _this.form.username,\n            password: _this.form.password\n          });\n        }\n      });\n    },\n    Toregister: function Toregister() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.$router.push({\n          path: '/register'\n        });\n      }, 1000);\n    },\n    Tofindpassword: function Tofindpassword() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        _this3.$router.push({\n          path: '/findpassword'\n        });\n      }, 1000);\n    }\n  }\n};",{"version":3,"sources":["login-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,aAAA,EAAA,UAAA;AACA,SAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,MAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SADA,CAAA;AAGA;AANA,KADA;AASA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,MAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SADA,CAAA;AAGA;AANA;AATA,GAFA;AAoBA,EAAA,IApBA,kBAoBA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA;AADA,KAAA;AAMA,GA3BA;AA4BA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA;AACA,QAAA,QAAA,EAAA,KAAA,aADA;AAEA,QAAA,QAAA,EAAA,KAAA;AAFA,OAAA;AAIA;AANA,GA5BA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,kBAAA,EAAA;AACA,YAAA,QAAA,EAAA,KAAA,CAAA,IAAA,CAAA,QADA;AAEA,YAAA,QAAA,EAAA,KAAA,CAAA,IAAA,CAAA;AAFA,WAAA;AAIA;AACA,OAPA;AAQA,KAVA;AAWA,IAAA,UAXA,wBAWA;AAAA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA;AADA,SAAA;AAGA,OAJA,EAIA,IAJA,CAAA;AAKA,KAjBA;AAkBA,IAAA,cAlBA,4BAkBA;AAAA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA;AADA,SAAA;AAGA,OAJA,EAIA,IAJA,CAAA;AAKA;AAxBA;AApCA,CAAA","sourcesContent":["<template>\n  <Form ref=\"LoginForm\" :model=\"form\" :rules=\"rules\" @keydown.enter.native=\"handleSubmit\">\n    <FormItem prop=\"username\">\n      <Input v-model=\"form.username\" placeholder=\"请输入用户名,1-10位字母数字\">\n        <span slot=\"prepend\">\n          <Icon :size=\"16\" type=\"ios-person\"></Icon>\n        </span>\n      </Input>\n    </FormItem>\n    <FormItem prop=\"password\">\n      <Input type=\"password\" v-model=\"form.password\" placeholder=\"请输入密码,8-16位字母数字\">\n        <span slot=\"prepend\">\n          <Icon :size=\"14\" type=\"md-lock\"></Icon>\n        </span>\n      </Input>\n    </FormItem>\n    <FormItem>\n      <Button @click=\"handleSubmit\" type=\"primary\" long>登录</Button>\n    </FormItem>\n    <FormItem>\n      <Button @click=\"Toregister\" type=\"primary\" long>没有账号?马上注册</Button>\n    </FormItem>\n    <FormItem>\n      <Button @click=\"Tofindpassword\" type=\"primary\" long>忘记密码?马上找回</Button>\n    </FormItem>\n  </Form>\n</template>\n<script>\nimport {loginusername, ispassword} from '../../libs/validate'\nimport {Encrypt}  from '../../libs/crypto'\nexport default {\n  name: 'LoginForm',\n  props: {\n    userNameRules: {\n      type: Array,\n      default: () => {\n        return [\n          { required: true, trigger: 'blur', validator: loginusername  }\n        ]\n      }\n    },\n    passwordRules: {\n      type: Array,\n      default: () => {\n        return [\n          { required: true, trigger: 'blur', validator: ispassword }\n        ]\n      }\n    }\n  },\n  data () {\n    return {\n      form: {\n        username: '',\n        password: ''\n      }\n    }\n  },\n  computed: {\n    rules () {\n      return {\n        username: this.userNameRules,\n        password: this.passwordRules\n      }\n    }\n  },\n  methods: {\n    handleSubmit () {\n      this.$refs.LoginForm.validate( (valid) => {\n        if (valid) {\n          this.$emit('on-success-valid', {\n            username: this.form.username,\n            password: this.form.password\n          })\n        }\n      })\n    },\n  Toregister () {\n      setTimeout(() => {\n        this.$router.push({\n        path: '/register'\n        })\n      },1000)\n  },\n  Tofindpassword () {\n      setTimeout(() => {\n        this.$router.push({\n        path: '/findpassword'\n        })\n      },1000)\n  }\n }\n}\n</script>\n"],"sourceRoot":"src/components/login-form"}]}