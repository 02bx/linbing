{"remainingRequest":"/root/zhenjinote/note/vue/node_modules/babel-loader/lib/index.js!/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/zhenjinote/note/vue/src/view/components/shownote/shownote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/zhenjinote/note/vue/src/view/components/shownote/shownote.vue","mtime":1570023272300},{"path":"/root/zhenjinote/note/vue/.babelrc","mtime":1569934280915},{"path":"/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AES from '@/libs/crypto';\nimport http from '@/libs/http';\nimport { getToken } from '@/libs/util';\nimport MarkdownItVue from 'markdown-it-vue';\nexport default {\n  inject: ['reload'],\n  components: {\n    MarkdownItVue: MarkdownItVue\n  },\n  data: function data() {\n    return {\n      item: {},\n      token: getToken(),\n      username: ''\n    };\n  },\n  created: function created() {\n    this.$nextTick(this.getParams());\n  },\n  methods: {\n    getParams: function getParams() {\n      this.item = this.$route.query.params;\n    },\n    edit: function edit(params) {\n      this.$router.push({\n        name: '修改笔记',\n        query: {\n          params: this.item\n        }\n      });\n    },\n    trash: function trash(item) {\n      var _this = this;\n\n      var flag = {\n        'type': 'trash',\n        'data': '1'\n      };\n      var data = {\n        'notename': AES.Encrypt(item.notename),\n        'flag': flag,\n        'token': this.token.trim()\n      };\n      data = JSON.stringify(data);\n      var req_params = {\n        'data': AES.Encrypt(data)\n      };\n      http.post('/api/setflag', req_params).then(function (res) {\n        res.data = eval('(' + res.data + ')');\n\n        switch (res.data.code) {\n          case 'Z1000':\n            setTimeout(function () {\n              _this.$router.push({\n                path: '/components/notelist'\n              });\n            }, 3000);\n            break;\n\n          case 'Z1001':\n            _this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1002':\n            _this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1004':\n            _this.$Notice.error({\n              title: '请求失败',\n              desc: '认证失败,请稍后再次尝试'\n            });\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["shownote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,GAAA,MAAA,eAAA;AACA,OAAA,IAAA,MAAA,aAAA;AACA,SAAA,QAAA,QAAA,aAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,QAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,QAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GAXA;AAYA,EAAA,OAZA,qBAYA;AACA,SAAA,SAAA,CAAA,KAAA,SAAA,EAAA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AACA,KAHA;AAIA,IAAA,IAJA,gBAIA,MAJA,EAIA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,MAAA,EAAA,KAAA;AADA;AAFA,OAAA;AAMA,KAXA;AAYA,IAAA,KAZA,iBAYA,IAZA,EAYA;AAAA;;AACA,UAAA,IAAA,GAAA;AACA,gBAAA,OADA;AAEA,gBAAA;AAFA,OAAA;AAIA,UAAA,IAAA,GAAA;AACA,oBAAA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CADA;AAEA,gBAAA,IAFA;AAGA,iBAAA,KAAA,KAAA,CAAA,IAAA;AAHA,OAAA;AAKA,MAAA,IAAA,GAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,UAAA,UAAA,GAAA;AAAA,gBAAA,GAAA,CAAA,OAAA,CAAA,IAAA;AAAA,OAAA;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,cAAA,EAAA,UAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,GAAA,CAAA,IAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA,IAAA,GAAA,GAAA,CAAA;;AACA,gBAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,eAAA,OAAA;AACA,YAAA,UAAA,CAAA,YAAA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,gBAAA,IAAA,EAAA;AADA,eAAA;AAGA,aAJA,EAIA,IAJA,CAAA;AAKA;;AACA,eAAA,OAAA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,cAAA,KAAA,EAAA,MADA;AAEA,cAAA,IAAA,EAAA;AAFA,aAAA;;AAIA;;AACA,eAAA,OAAA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,cAAA,KAAA,EAAA,MADA;AAEA,cAAA,IAAA,EAAA;AAFA,aAAA;;AAIA;;AACA,eAAA,OAAA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,cAAA,KAAA,EAAA,MADA;AAEA,cAAA,IAAA,EAAA;AAFA,aAAA;;AAIA;;AACA;AACA;AA3BA;AA6BA,OA/BA;AAgCA;AAxDA;AAfA,CAAA","sourcesContent":["<style lang=\"less\">\n  @import './shownote.less';\n</style>\n\n<template>\n  <div>\n    <Card class=\"card\">\n            <p slot=\"title\">\n                <Icon type=\"ios-book\"></Icon>\n                <span>{{item.notename}}</span>\n                <span class = \"time\">{{item.time}}</span>\n            </p>\n            <markdown-it-vue class = \"md-body\" :content = \"item.content\"/>\n            <p>\n              <Button  type=\"info\"  @click=\"trash(item)\" size=\"small\" class=\"button\">\n                              删除\n              </Button>\n              <Button  type=\"info\"  @click=\"edit(item)\" size=\"small\" class=\"button\">\n                              编辑\n              </Button>\n            </p>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport AES  from '@/libs/crypto'\nimport http  from '@/libs/http'\nimport {getToken } from '@/libs/util'\nimport MarkdownItVue from 'markdown-it-vue'\nexport default {\n  inject: ['reload'],\n  components: {\n    MarkdownItVue\n  },\n  data () {\n    return {\n      item: {},\n      token: getToken(),\n      username: '',\n    }\n  },\n  created () {\n    this.$nextTick(this.getParams())\n  },\n  methods: {\n    getParams () {\n      this.item = this.$route.query.params\n    },\n    edit (params) {\n      this.$router.push({\n        name:'修改笔记',\n        query:{\n          params : this.item\n        }\n      })\n    },\n    trash (item) {\n        let flag = {\n        'type': 'trash',\n        'data': '1'\n        }\n        let data = {\n            'notename': AES.Encrypt(item.notename),\n            'flag': flag,\n            'token': this.token.trim()\n        }\n        data = JSON.stringify(data)\n        let req_params = {'data': AES.Encrypt(data)}\n        http.post('/api/setflag', req_params).then((res) => {\n            res.data = eval('(' + res.data + ')')\n            switch(res.data.code ){\n            case'Z1000':\n            setTimeout(() => {\n                    this.$router.push({\n                    path: '/components/notelist'\n                    })\n                },3000)\n            break\n            case 'Z1001':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '系统发生异常,请稍后再次尝试'\n            })\n            break\n            case 'Z1002':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '系统发生异常,请稍后再次尝试'\n            })\n            break\n            case 'Z1004':\n            this.$Notice.error({\n                title: '请求失败',\n                desc: '认证失败,请稍后再次尝试'\n            })\n            break\n            default:\n            break\n            }\n        })\n      }\n    }\n}\n</script>\n\n"],"sourceRoot":"src/view/components/shownote"}]}