{"remainingRequest":"/root/zhenjinote/note/vue/node_modules/babel-loader/lib/index.js!/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/zhenjinote/note/vue/src/view/publish/publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/zhenjinote/note/vue/src/view/publish/publish.vue","mtime":1570013037711},{"path":"/root/zhenjinote/note/vue/.babelrc","mtime":1569934280915},{"path":"/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/zhenjinote/note/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport http from '@/libs/http';\nimport LoginForm from '_c/login-form';\nimport AES from '@/libs/crypto';\nimport store from \"../../store\";\nexport default {\n  components: {\n    LoginForm: LoginForm\n  },\n  methods: {\n    handleSubmit: function handleSubmit(_ref) {\n      var _this = this;\n\n      var username = _ref.username,\n          password = _ref.password;\n      var data = {\n        'username': username.trim(),\n        'password': password.trim()\n      };\n      data = JSON.stringify(data);\n      var params = {\n        'data': AES.Encrypt(data)\n      };\n      http.post('/api/login', params).then(function (res) {\n        res.data = eval('(' + res.data + ')');\n\n        switch (res.data.code) {\n          case 'Z1000':\n            store.commit('setToken', res.data.data.token);\n            var _data = {\n              'token': res.data.data.token.trim()\n            };\n            _data = JSON.stringify(_data);\n            var _params = {\n              'data': AES.Encrypt(_data)\n            };\n            http.post('/api/getuserinfo', _params).then(function (res) {\n              res.data = eval('(' + res.data + ')');\n\n              switch (res.data.code) {\n                case 'Z1000':\n                  _this.$Notice.success({\n                    title: '登录成功',\n                    desc: '马上跳转到主页 '\n                  });\n\n                  store.commit('setUserName', res.data.username);\n                  store.commit('setUserEmail', res.data.email);\n                  store.commit('setAvatar', _data.avatar);\n                  store.commit('setAccess', res.data.access);\n                  store.commit('setUserId', res.data.user_id);\n                  store.commit('setHasGetInfo', true);\n                  setTimeout(function () {\n                    _this.$router.push({\n                      path: '/home'\n                    });\n                  }, 1000);\n                  break;\n\n                case 'Z1001':\n                  _this.$Notice.error({\n                    title: '登录失败',\n                    desc: '系统发生异常,请稍后再次尝试'\n                  });\n\n                  break;\n\n                case 'Z1002':\n                  _this.$Notice.error({\n                    title: '登录失败',\n                    desc: '系统发生异常,请稍后再次尝试'\n                  });\n\n                  break;\n\n                case 'Z1004':\n                  _this.$Notice.error({\n                    title: '登录失败',\n                    desc: '登录失败,原因是认证失败,请重新登录'\n                  });\n\n                  break;\n              }\n            });\n            break;\n\n          case 'Z1001':\n            _this.$Notice.error({\n              title: '登录失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1002':\n            _this.$Notice.error({\n              title: '登录失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1005':\n            _this.$Notice.error({\n              title: '用户未注册',\n              desc: '请前往注册页面注册'\n            });\n\n            break;\n\n          case 'Z1008':\n            _this.$Notice.error({\n              title: '密码错误',\n              desc: '密码错误,如果忘记密码请找回密码'\n            });\n\n          default:\n            break;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["publish.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\n  @import './pubish.less';\n</style>\n\n<template>\n  <div class=\"login\">\n    <div class=\"login-con\">\n      <Card icon=\"log-in\" title=\"欢迎登录\" :bordered=\"false\">\n        <div class=\"form-con\">\n          <login-form @on-success-valid=\"handleSubmit\"></login-form>\n        </div>\n      </Card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport http from '@/libs/http'\nimport LoginForm from '_c/login-form'\nimport AES from '@/libs/crypto'\nimport store from '../../store'\nexport default {\n  components: {\n    LoginForm\n  },\n  methods: {\n    handleSubmit ({ username, password }) {\n      let data = {\n        'username': username.trim(),\n        'password': password.trim()\n      }\n      data = JSON.stringify(data)\n      let params = {'data': AES.Encrypt(data)}\n      http.post('/api/login', params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          store.commit('setToken', res.data.data.token)\n          let data = {\n            'token': res.data.data.token.trim()\n          }\n          data = JSON.stringify(data)\n          let params = {'data': AES.Encrypt(data)}\n          http.post('/api/getuserinfo', params).then((res) => {\n            res.data = eval('(' + res.data + ')')\n            switch(res.data.code ){\n              case'Z1000':\n              this.$Notice.success({\n                  title: '登录成功',\n                  desc: '马上跳转到主页 '\n              })\n              store.commit('setUserName', res.data.username)\n              store.commit('setUserEmail', res.data.email)\n              store.commit('setAvatar', data.avatar)\n              store.commit('setAccess',res.data.access)\n              store.commit('setUserId', res.data.user_id)\n              store.commit('setHasGetInfo', true)\n\n              setTimeout(() => {\n                this.$router.push({\n                  path: '/home'\n                })\n              },1000)\n              break\n\n              case 'Z1001':\n              this.$Notice.error({\n                  title: '登录失败',\n                  desc: '系统发生异常,请稍后再次尝试'\n              })\n              break\n\n              case 'Z1002':\n              this.$Notice.error({\n                  title: '登录失败',\n                  desc: '系统发生异常,请稍后再次尝试'\n              })\n              break\n\n              case 'Z1004':\n              this.$Notice.error({\n                  title: '登录失败',\n                  desc: '登录失败,原因是认证失败,请重新登录'\n              })\n              break\n            }\n          })\n          break\n\n          case 'Z1001':\n          this.$Notice.error({\n              title: '登录失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n\n          case 'Z1002':\n          this.$Notice.error({\n              title: '登录失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n\n          case 'Z1005':\n          this.$Notice.error({\n              title: '用户未注册',\n              desc: '请前往注册页面注册'\n          })\n          break\n\n          case 'Z1008':\n          this.$Notice.error({\n              title: '密码错误',\n              desc: '密码错误,如果忘记密码请找回密码'\n          })\n          default:\n          break\n        }\n      })\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/view/publish"}]}