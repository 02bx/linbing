{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\dscjh\\Desktop\\临兵\\vue\\src\\libs\\crypto.js","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\src\\libs\\crypto.js","mtime":1578482485119},{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵\\vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport { JSEncrypt } from 'jsencrypt'; // Convert a hex string to a byte array  16进制转byte数组\n\nfunction hexToBytes(hex) {\n  for (var bytes = [], c = 0; c < hex.length; c += 2) {\n    bytes.push(parseInt(hex.substr(c, 2), 16));\n  }\n\n  return bytes;\n}\n\nJSEncrypt.prototype.encryptLong2 = function (string) {\n  var k = this.getKey();\n\n  try {\n    var ct = \"\"; //RSA每次加密最大117bytes，需要辅助方法判断字符串截取位置\n    //1.获取字符串截取点\n\n    var bytes = new Array();\n    bytes.push(0);\n    var byteNo = 0;\n    var len, c;\n    len = string.length;\n    var temp = 0;\n\n    for (var i = 0; i < len; i++) {\n      c = string.charCodeAt(i);\n\n      if (c >= 0x010000 && c <= 0x10FFFF) {\n        byteNo += 4;\n      } else if (c >= 0x000800 && c <= 0x00FFFF) {\n        byteNo += 3;\n      } else if (c >= 0x000080 && c <= 0x0007FF) {\n        byteNo += 2;\n      } else {\n        byteNo += 1;\n      }\n\n      if (byteNo % 117 >= 114 || byteNo % 117 == 0) {\n        if (byteNo - temp >= 114) {\n          bytes.push(i);\n          temp = byteNo;\n        }\n      }\n    } //2.截取字符串并分段加密\n\n\n    if (bytes.length > 1) {\n      for (var i = 0; i < bytes.length - 1; i++) {\n        var str;\n\n        if (i == 0) {\n          str = string.substring(0, bytes[i + 1] + 1);\n        } else {\n          str = string.substring(bytes[i] + 1, bytes[i + 1] + 1);\n        }\n\n        var t1 = k.encrypt(str);\n        ct += t1;\n      }\n\n      ;\n\n      if (bytes[bytes.length - 1] != string.length - 1) {\n        var lastStr = string.substring(bytes[bytes.length - 1] + 1);\n        ct += k.encrypt(lastStr);\n      }\n\n      return hexToBytes(ct);\n    }\n\n    var t = k.encrypt(string);\n    var y = hexToBytes(t);\n    return y;\n  } catch (ex) {\n    return false;\n  }\n};\n\nfunction arrayBufferToBase64(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var len = bytes.byteLength;\n\n  for (var i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n\n  return window.btoa(binary);\n}\n\nexport function Encrypt(data) {\n  var encrypt = new JSEncrypt();\n  encrypt.setPublicKey('-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDbqZCwjBRSKd64fM/ortRglY/VIP+qdqB2rk3EKmWQnhwMREqSoUwVnyPQqj61mVguox1rh4LSgyRvAzYJc9FUKvDkcKsUm07qgzUhbS/B6XpdGqLlh+ror/J2CJuwn3KQDfgMg5gb4Bi98yo0CAfOYo3QqrPmXthBbEHuCyvasQIDAQAB-----END PUBLIC KEY-----'); // 公钥\n\n  var getrsadata = arrayBufferToBase64(encrypt.encryptLong2(data)); //将加密的数据转码为base64\n\n  return getrsadata; //加密后的数据\n}\nexport default {\n  Encrypt: Encrypt\n};",{"version":3,"sources":["C:\\Users\\dscjh\\Desktop\\临兵\\vue\\src\\libs\\crypto.js"],"names":["JSEncrypt","hexToBytes","hex","bytes","c","length","push","parseInt","substr","prototype","encryptLong2","string","k","getKey","ct","Array","byteNo","len","temp","i","charCodeAt","str","substring","t1","encrypt","lastStr","t","y","ex","arrayBufferToBase64","buffer","binary","Uint8Array","byteLength","String","fromCharCode","window","btoa","Encrypt","data","setPublicKey","getrsadata"],"mappings":"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","sourcesContent":["import { JSEncrypt } from 'jsencrypt'\r\n// Convert a hex string to a byte array  16进制转byte数组\r\n\r\nfunction hexToBytes(hex) {\r\n  for (var bytes = [], c = 0; c < hex.length; c += 2)\r\n    bytes.push(parseInt(hex.substr(c, 2), 16));\r\n  return bytes;\r\n}\r\n\r\nJSEncrypt.prototype.encryptLong2 = function (string) {\r\n  var k = this.getKey(); \r\n  try {\r\n    var ct = \"\";     //RSA每次加密最大117bytes，需要辅助方法判断字符串截取位置\r\n    //1.获取字符串截取点\r\n    var bytes = new Array();\r\n    bytes.push(0);\r\n    var byteNo = 0;\r\n    var len, c;\r\n    len = string.length;\r\n    var temp = 0;\r\n    for (var i = 0; i < len; i++) {\r\n      c = string.charCodeAt(i);\r\n      if (c >= 0x010000 && c <= 0x10FFFF) {\r\n        byteNo += 4;\r\n      } else if (c >= 0x000800 && c <= 0x00FFFF) {\r\n        byteNo += 3;\r\n      } else if (c >= 0x000080 && c <= 0x0007FF) {\r\n        byteNo += 2;\r\n      } else {\r\n        byteNo += 1;\r\n      }\r\n      if ((byteNo % 117) >= 114 || (byteNo % 117) == 0) {\r\n        if (byteNo - temp >= 114) {\r\n          bytes.push(i);\r\n          temp = byteNo;\r\n        }\r\n      }\r\n    }\r\n    //2.截取字符串并分段加密\r\n    if (bytes.length > 1) {\r\n      for (var i = 0; i < bytes.length - 1; i++) {\r\n        var str;\r\n        if (i == 0) {\r\n          str = string.substring(0, bytes[i + 1] + 1);\r\n        } else {\r\n          str = string.substring(bytes[i] + 1, bytes[i + 1] + 1);\r\n        }\r\n        var t1 = k.encrypt(str);\r\n        ct += t1;\r\n      };\r\n      if (bytes[bytes.length - 1] != string.length - 1) {\r\n        var lastStr = string.substring(bytes[bytes.length - 1] + 1);\r\n        ct += k.encrypt(lastStr);\r\n      }\r\n      return hexToBytes(ct);\r\n    }\r\n    var t = k.encrypt(string);\r\n    var y = hexToBytes(t);\r\n    return y;\r\n  } catch (ex) {\r\n    return false;\r\n  }\r\n};\r\n\r\nfunction arrayBufferToBase64(buffer) {\r\n  var binary = '';\r\n  var bytes = new Uint8Array(buffer);\r\n  var len = bytes.byteLength;\r\n  for (var i = 0; i < len; i++) {\r\n    binary += String.fromCharCode(bytes[i]);\r\n  }\r\n  return window.btoa(binary);\r\n}\r\n\r\nexport function Encrypt(data) {\r\n    let encrypt = new JSEncrypt()\r\n    encrypt.setPublicKey('-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDbqZCwjBRSKd64fM/ortRglY/VIP+qdqB2rk3EKmWQnhwMREqSoUwVnyPQqj61mVguox1rh4LSgyRvAzYJc9FUKvDkcKsUm07qgzUhbS/B6XpdGqLlh+ror/J2CJuwn3KQDfgMg5gb4Bi98yo0CAfOYo3QqrPmXthBbEHuCyvasQIDAQAB-----END PUBLIC KEY-----') // 公钥\r\n    let getrsadata = arrayBufferToBase64(encrypt.encryptLong2(data)); //将加密的数据转码为base64\r\n    return getrsadata //加密后的数据\r\n}\r\n\r\nexport default {\r\n    Encrypt\r\n}\r\n\r\n"]}]}