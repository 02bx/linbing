{"remainingRequest":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\babel-loader\\lib\\index.js!D:\\Tools\\zhenjinote\\gaizao\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Tools\\zhenjinote\\gaizao\\src\\router\\index.js","dependencies":[{"path":"D:\\Tools\\zhenjinote\\gaizao\\src\\router\\index.js","mtime":1558489213000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\.babelrc","mtime":1557223479000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from \"./routers\";\nimport store from '@/store';\nimport iView from 'iview';\nimport { setToken, getToken, canTurnTo, setTitle } from '@/libs/util';\nimport config from '@/config';\nvar homeName = config.homeName;\nVue.use(Router);\nvar router = new Router({\n  routes: routes,\n  mode: 'history'\n});\nvar LOGIN_PAGE_NAME = 'login';\nvar REGISTER_PAGE_NAME = 'register';\n\nvar turnTo = function turnTo(to, access, next) {\n  if (canTurnTo(to.name, access, routes)) next(); // 有权限，可访问\n  else next({\n      replace: true,\n      name: 'error_401'\n    }); // 无权限，重定向到401页面\n};\n\nrouter.beforeEach(function (to, from, next) {\n  iView.LoadingBar.start();\n  var token = getToken();\n\n  if (!token && to.name !== LOGIN_PAGE_NAME && to.name !== REGISTER_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    next({\n      name: LOGIN_PAGE_NAME // 跳转到登录页\n\n    });\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    // 未登陆且要跳转的页面是登录页\n    next(); // 跳转\n  } else if (!token && to.name === REGISTER_PAGE_NAME) {\n    // 未登陆且要跳转的页面是登录页\n    next(); // 跳转\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    next({\n      name: homeName // 跳转到homeName页\n\n    });\n  } else {\n    if (store.state.user.hasGetInfo) {\n      turnTo(to, store.state.user.access, next);\n    } else {\n      store.dispatch('getUserInfo').then(function (user) {\n        // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n        turnTo(to, user.access, next);\n      }).catch(function () {\n        setToken('');\n        next({\n          name: 'login'\n        });\n      });\n    }\n  }\n});\nrouter.afterEach(function (to) {\n  setTitle(to, router.app);\n  iView.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});\nexport default router;",{"version":3,"sources":["D:\\Tools\\zhenjinote\\gaizao\\src\\router\\index.js"],"names":["Vue","Router","routes","store","iView","setToken","getToken","canTurnTo","setTitle","config","homeName","use","router","mode","LOGIN_PAGE_NAME","REGISTER_PAGE_NAME","turnTo","to","access","next","name","replace","beforeEach","from","LoadingBar","start","token","state","user","hasGetInfo","dispatch","then","catch","afterEach","app","finish","window","scrollTo"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport routes from './routers'\nimport store from '@/store'\nimport iView from 'iview'\nimport { setToken, getToken, canTurnTo, setTitle } from '@/libs/util'\nimport config from '@/config'\nconst { homeName } = config\n\nVue.use(Router)\nconst router = new Router({\n  routes,\n  mode: 'history'\n})\nconst LOGIN_PAGE_NAME = 'login'\nconst REGISTER_PAGE_NAME = 'register'\n\nconst turnTo = (to, access, next) => {\n  if (canTurnTo(to.name, access, routes)) next() // 有权限，可访问\n  else next({ replace: true, name: 'error_401' }) // 无权限，重定向到401页面\n}\n\nrouter.beforeEach((to, from, next) => {\n  iView.LoadingBar.start()\n  const token = getToken()\n  if (!token && to.name !== LOGIN_PAGE_NAME && to.name !== REGISTER_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    next({\n      name: LOGIN_PAGE_NAME // 跳转到登录页\n    })\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    // 未登陆且要跳转的页面是登录页\n    next() // 跳转\n  } else if (!token && to.name === REGISTER_PAGE_NAME) {\n    // 未登陆且要跳转的页面是登录页\n    next() // 跳转\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    next({\n      name: homeName // 跳转到homeName页\n    })\n  } else {\n    if (store.state.user.hasGetInfo) {\n      turnTo(to, store.state.user.access, next)\n    } else {\n      store.dispatch('getUserInfo').then(user => {\n        // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n        turnTo(to, user.access, next)\n      }).catch(() => {\n        setToken('')\n        next({\n          name: 'login'\n        })\n      })\n    }\n  }\n})\n\nrouter.afterEach(to => {\n  setTitle(to, router.app)\n  iView.LoadingBar.finish()\n  window.scrollTo(0, 0)\n})\n\nexport default router\n"]}]}