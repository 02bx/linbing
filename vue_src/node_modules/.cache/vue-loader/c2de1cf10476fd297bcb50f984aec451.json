{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\components\\trashlist\\trashlist.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\components\\trashlist\\trashlist.vue","mtime":1578395726408},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.page{\n   border-radius: 100px;\n   padding: 10px;\n   text-align:center;\n   margin-top: 10px;\n   margin-left: auto;\n   margin-right: auto;\n }\n",{"version":3,"sources":["trashlist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"trashlist.vue","sourceRoot":"src/view/components/trashlist","sourcesContent":["<template>\n  <div>\n    <Card>\n      <Table   border  editable searchable search-place=\"top\" :data=\"tableData\" :columns=\"columns\"/>\n      <Page\n          class=\"page\" \n          :current=\"this.page.pageNum\" \n          :page-size=\"this.page.pageSize\" \n          :total=\"this.page.count\" \n          :page-size-opts=\"[5,10]\"\n          show-sizer\n          show-elevator\n          show-total\n          @on-change=\"handlePage\"\n          @on-page-size-change=\"handlePageSize\">\n      </Page>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport RSA  from '@/libs/crypto'\nimport http  from '@/libs/http'\nimport {getToken } from '@/libs/util'\nexport default {\n  inject: ['reload'],\n  name: 'tables_page',\n  data () {\n    return {\n      token: getToken(),\n      page: {\n          pageNum: 1,\n          pageSize: 5,\n          count: 0\n      },\n      columns: [\n        { \n          title: '笔记名字',\n          key: 'notename', \n          sortable: true ,\n          resizable: true,\n          width: 400\n        },\n        { \n          title: '创建时间', \n          key: 'time' ,\n          resizable: true,\n          width: 400\n          },\n        {\n          title: '操作',\n          key: 'action',\n          resizable: true,\n          width: 420,\n          align: 'center',\n          render: (h, params) => {\n            return h('div', [\n                h('Button', {\n                    props: {\n                        type: 'primary',\n                        size: 'small'\n                    },\n                    style: {\n                        marginRight: '20px'\n                    },\n                    on: {\n                        click: () => {\n                            this.show(params)\n                        }\n                    }\n                }, '查看'),\n                h('Button', {\n                    props: {\n                        type: 'primary',\n                        size: 'small'\n                    },\n                    style: {\n                        marginRight: '20px'\n                    },\n                    on: {\n                        click: () => {\n                            this.restore(params)\n                        }\n                    }\n                }, '恢复'),\n                h('Button', {\n                    props: {\n                        type: 'error',\n                        size: 'small'\n                    },\n                    on: {\n                        click: () => {\n                            this.delete(params)\n                        }\n                    }\n                }, '彻底删除')\n            ]);\n        }\n      }\n      ],\n      tableData: []\n    }\n  },\n  methods: {\n    getTableData () {\n      let flag = {\n        'type': 'trash',\n        'data': '1'\n      }\n      let data = {\n        'pagenum': this.page.pageNum,\n        'pagesize': this.page.pageSize,\n        'flag': flag,\n        'token': this.token.trim()\n      }\n      data = JSON.stringify(data)\n      let params = {'data': RSA.Encrypt(data)}\n      http.post('/api/notelist', params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          if (res.data.data !== \"\"){\n            this.tableData = res.data.data\n          }\n          this.page.count = res.data.total\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1004':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '认证失败,请稍后再次尝试'\n          })\n          break\n          case 'Z1009':\n          this.$Notice.info({\n              title: '数据为空',\n              desc: '数据为空,请新建笔记'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    show (params) {\n      this.$router.push({\n        name:'笔记详情',\n        query:{\n          params : params['row']\n        }\n      })\n    },\n    restore (params) {\n      let flag = {\n        'type': 'trash',\n        'data': '0'\n      }\n      let data = {\n        'notename': params.row.notename,\n        'flag': flag,\n        'token': this.token.trim()\n      }\n      data = JSON.stringify(data)\n      let req_params = {'data': RSA.Encrypt(data)}\n      http.post('/api/setflag', req_params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          this.reload()\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1004':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '认证失败,请稍后再次尝试'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    delete (params) {\n      let data = {\n        'notename': params.row.notename,\n        'token': this.token.trim()\n      }\n      data = JSON.stringify(data)\n      let req_params = {'data': RSA.Encrypt(data)}\n      http.post('/api/delete', req_params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          this.reload()\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1004':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '认证失败,请稍后再次尝试'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    handlePage (pageNum) {\n      this.page.pageNum = pageNum\n      this.getTableData()\n    },\n    handlePageSize (pageSize) {\n      this.page.pageSize = pageSize\n      this.getTableData()\n    }\n  },\n  mounted () {\n    this.getTableData()\n  },\n}\n</script>\n\n<style>\n .page{\n    border-radius: 100px;\n    padding: 10px;\n    text-align:center;\n    margin-top: 10px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n</style>\n"]}]}