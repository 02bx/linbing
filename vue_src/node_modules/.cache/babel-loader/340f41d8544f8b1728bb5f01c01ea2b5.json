{"remainingRequest":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\babel-loader\\lib\\index.js!D:\\Tools\\zhenjinote\\gaizao\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Tools\\zhenjinote\\gaizao\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Tools\\zhenjinote\\gaizao\\src\\components\\register-form\\register-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Tools\\zhenjinote\\gaizao\\src\\components\\register-form\\register-form.vue","mtime":1558489079000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\.babelrc","mtime":1557223479000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Tools\\zhenjinote\\gaizao\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { isEmail, isWscnEmail, isUsername, ischeckNum, isPassword } from \"../../libs/validate.js\";\nimport { Encrypt } from \"../../libs/crypto\";\nexport default {\n  name: 'RegisterForm',\n  props: {\n    userNameRules: {\n      type: Array,\n      default: function _default() {\n        return [{\n          required: true,\n          trigger: 'blur',\n          validator: isUsername\n        }];\n      }\n    },\n    eMailRules: {\n      type: Array,\n      default: function _default() {\n        return [{\n          required: true,\n          trigger: 'blur',\n          validator: isEmail\n        }];\n      }\n    },\n    checkNumRules: {\n      type: Array,\n      default: function _default() {\n        return [{\n          required: true,\n          trigger: 'blur',\n          validator: ischeckNum\n        }];\n      }\n    },\n    passwordRules: {\n      type: Array,\n      default: function _default() {\n        return [{\n          required: true,\n          trigger: 'blur',\n          validator: isPassword\n        }];\n      }\n    },\n    passwordConfirmRules: {\n      type: Array,\n      default: function _default() {\n        return [{\n          required: true,\n          trigger: 'blur',\n          validator: isPassword\n        }];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      sendmail_result: false,\n      capta: '',\n      form: {\n        userName: '',\n        eMail: '',\n        checkNum: '',\n        password: '',\n        passwordConfirm: ''\n      }\n    };\n  },\n  computed: {\n    rules: function rules() {\n      return {\n        userName: this.userNameRules,\n        eMail: this.eMailRules,\n        checkNum: this.checkNumRules,\n        password: this.passwordRules,\n        passwordConfirm: this.passwordConfirmRules\n      };\n    }\n  },\n  methods: {\n    getcheckNum: function getcheckNum() {\n      var _this = this;\n\n      if (!isWscnEmail(this.form.email)) {\n        alert('请输入正确的合法邮箱以来获取注册码');\n      } else {\n        var params = new URLSearchParams();\n        params.append('email', this.form.email);\n        this.axios.post('/getcheckNum', params).then(function (res) {\n          //console.log(res)\n          //console.log(res.data)\n          if (res.data == \"0\") {\n            alert('发送邮件失败');\n            setTimeout(function () {}.bind(_this), 1000);\n          } else {\n            alert('发送邮件成功');\n            _this.capta = res.data; //console.log(this.capta)\n\n            _this.sendmail_result = true;\n            setTimeout(function () {}.bind(_this), 1000);\n          }\n        });\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      this.$refs.RegisterForm.validate(function (valid) {\n        if (valid) {\n          if (_this2.sendmail_result == 'flase') {\n            alert('请先获取注册码！');\n          } else {\n            if (_this2.form.checkNum != _this2.capta) {\n              alert('注册码输入错误,请重新输入！');\n            } else {\n              if (_this2.form.password != _this2.passwordConfirm) {\n                alert('二次密码输入不一致，请重新输入密码！');\n              } else {\n                var params = new URLSearchParams();\n                params.append('username', Encrypt(_this2.form.username));\n                params.append('email', Encrypt(_this2.form.email));\n                params.append('password', Encrypt(_this2.form.password));\n\n                _this2.axios.post('/register', params).then(function (res) {\n                  if (res.data == \"1\") {\n                    _this2.$router.push({\n                      path: '/login'\n                    });\n\n                    _this2.new_username = '';\n                    _this2.new_password = '';\n                    setTimeout(function () {}.bind(_this2), 1000);\n                  } else if (res.data == \"-1\") {\n                    alert(\"注册失败！\");\n                  } else {\n                    alert(\"系统错误！\");\n                    setTimeout(function () {}.bind(_this2), 1000);\n                  }\n                });\n              }\n            }\n          }\n        } else {\n          //console.log('error submit!!')\n          return false;\n        }\n      });\n    },\n    ToLogin: function ToLogin() {\n      this.$router.push({\n        path: '/login'\n      });\n    }\n  }\n};",{"version":3,"sources":["register-form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  \n  <Form ref=\"RegisterForm\" :model=\"form\" :rules=\"rules\" @keydown.enter.native=\"handleSubmit\">\n    <FormItem prop=\"userName\">\n      <Input v-model=\"form.userName\" placeholder=\"请输入用户名\">\n        <span slot=\"prepend\">\n          <Icon :size=\"16\" type=\"ios-contact\"></Icon>\n        </span>\n      </Input>\n    </FormItem>\n    <FormItem prop=\"eMail\">\n      <Input v-model=\"form.eMail\" placeholder=\"请输入邮箱地址\">\n        <span slot=\"prepend\">\n          <Icon :size=\"16\" type=\"ios-mail\"></Icon>\n        </span>\n      </Input>\n    </FormItem>\n    <FormItem prop=\"checkNum\">\n      <Input v-model=\"form.checkNum\" placeholder=\"请输入注册码\">\n        <span slot=\"prepend\">\n          <Icon :size=\"16\" type=\"ios-key\"></Icon>\n        </span>\n      </Input>\n      <Button style=\"position:absolute; right:-100px; top: 2px;\" type=\"primary\" float: left @click=\"getcheckNum\">获取注册码</Button>\n    </FormItem>\n    <FormItem prop=\"password\">\n      <Input type=\"password\" v-model=\"form.password\" placeholder=\"请输入密码\">\n        <span slot=\"prepend\">\n          <Icon :size=\"14\" type=\"md-lock\"></Icon>\n        </span>\n      </Input>\n    </FormItem>\n    <FormItem prop=\"passwordConfirm\">\n      <Input type=\"password\" v-model=\"form.passwordConfirm\" placeholder=\"请再次输入密码\">\n        <span slot=\"prepend\">\n          <Icon :size=\"14\" type=\"md-lock\"></Icon>\n        </span>\n      </Input>\n    </FormItem>\n    <FormItem>\n      <Button @click=\"handleSubmit\" type=\"primary\" long>注册</Button>\n    </FormItem>\n     <FormItem>\n      <Button @click=\"ToLogin\" type=\"primary\" long>已有账号?马上登录</Button>\n    </FormItem>\n  </Form>\n</template>\n\n<script>\nimport {isEmail, isWscnEmail, isUsername, ischeckNum, isPassword} from '../../libs/validate.js'\nimport {Encrypt}  from '../../libs/crypto'\nexport default {\n  name: 'RegisterForm',\n  props: {\n    userNameRules: {\n      type: Array,\n      default: () => {\n        return [\n          { required: true, trigger: 'blur', validator: isUsername }\n        ]\n      }\n    },\n    eMailRules: {\n      type: Array,\n      default: () => {\n        return [\n          { required: true, trigger: 'blur', validator: isEmail }\n        ]\n      }\n    },\n    checkNumRules: {\n      type: Array,\n      default: () => {\n        return [\n          { required: true, trigger: 'blur', validator: ischeckNum }\n        ]\n      }\n    },\n    passwordRules: {\n      type: Array,\n      default: () => {\n        return [\n          { required: true, trigger: 'blur', validator: isPassword }\n        ]\n      }\n    },\n    passwordConfirmRules: {\n      type: Array,\n      default: () => {\n        return [\n          { required: true, trigger: 'blur', validator: isPassword }\n        ]\n      }\n    }\n  },\n  data () {\n    return {\n      sendmail_result: false,\n      capta: '',\n      form: {\n        userName: '',\n        eMail: '',\n        checkNum: '',\n        password: '',\n        passwordConfirm: ''\n      }\n    }\n  },\n  computed: {\n    rules () {\n      return {\n        userName: this.userNameRules,\n        eMail: this.eMailRules,\n        checkNum: this.checkNumRules,\n        password: this.passwordRules,\n        passwordConfirm: this.passwordConfirmRules\n      }\n    }\n  },\n  methods: {\n    getcheckNum () {\n        if (!isWscnEmail(this.form.email)) {\n            alert('请输入正确的合法邮箱以来获取注册码')\n        }\n        else {\n           let params = new URLSearchParams()\n           params.append('email', this.form.email)\n           this.axios.post('/getcheckNum', params).then((res) => {\n           //console.log(res)\n           //console.log(res.data)\n           if (res.data == \"0\") {\n              alert('发送邮件失败')\n              setTimeout(function () {\n              }.bind(this), 1000)\n            }\n           else {\n              alert('发送邮件成功')\n              this.capta = res.data\n              //console.log(this.capta)\n              this.sendmail_result = true\n              setTimeout(function () {\n              }.bind(this), 1000)\n            }\n            })\n        }\n    },\n    handleSubmit () {\n      this.$refs.RegisterForm.validate((valid) => {\n        if (valid) {\n            if (this.sendmail_result == 'flase') {\n                alert('请先获取注册码！')\n            }\n            else {\n                if (this.form.checkNum != this.capta) {\n                    alert('注册码输入错误,请重新输入！')\n                }\n                else {\n                    if (this.form.password != this.passwordConfirm) {\n                        alert('二次密码输入不一致，请重新输入密码！')\n                    }\n                    else {\n                        let params = new URLSearchParams()\n                        params.append('username', Encrypt(this.form.username))\n                        params.append('email', Encrypt(this.form.email))\n                        params.append('password', Encrypt(this.form.password))\n                        this.axios.post('/register', params).then((res) => {\n                        if (res.data == \"1\") {\n                            this.$router.push({\n                                path: '/login'\n                            })\n                            this.new_username = ''\n                            this.new_password = ''\n                            setTimeout(function () {\n                            }.bind(this), 1000)\n                        }\n                        else if(res.data == \"-1\"){\n                            alert(\"注册失败！\")\n                        }\n                        else {\n                            alert(\"系统错误！\")\n                            setTimeout(function () {\n                            }.bind(this), 1000)\n                        }\n                        })\n                    }\n                    \n                }\n            }\n        }\n        else {\n          //console.log('error submit!!')\n          return false\n        }\n          \n       })\n    },\n    ToLogin () {\n      this.$router.push({\n        path: '/login'\n      })\n    }\n  }  \n}\n</script>\n"],"sourceRoot":"src/components/register-form"}]}