{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\libs\\crypto.js","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\libs\\crypto.js","mtime":1578460537837},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//import { JSEncrypt } from 'encryptlong'\nimport { JSEncrypt } from 'jsencrypt'; // Convert a hex string to a byte array  16进制转byte数组\n\nfunction hexToBytes(hex) {\n  for (var bytes = [], c = 0; c < hex.length; c += 2) {\n    bytes.push(parseInt(hex.substr(c, 2), 16));\n  }\n\n  return bytes;\n} // Convert a byte array to a hex string byte数组转16进制\n\n\nfunction bytesToHex(bytes) {\n  for (var hex = [], i = 0; i < bytes.length; i++) {\n    hex.push((bytes[i] >>> 4).toString(16));\n    hex.push((bytes[i] & 0xF).toString(16));\n  }\n\n  return hex.join(\"\");\n}\n\n; //加密方法\n\n/*export function Encrypt(data) {\n    const PUBLIC_KEY = '-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDbqZCwjBRSKd64fM/ortRglY/VIP+qdqB2rk3EKmWQnhwMREqSoUwVnyPQqj61mVguox1rh4LSgyRvAzYJc9FUKvDkcKsUm07qgzUhbS/B6XpdGqLlh+ror/J2CJuwn3KQDfgMg5gb4Bi98yo0CAfOYo3QqrPmXthBbEHuCyvasQIDAQAB-----END PUBLIC KEY-----'\n    let encryptor = new JSEncrypt()\n    encryptor.setPublicKey(PUBLIC_KEY)\n    const rsaData = encryptor.encryptLong(data)\n    return rsaData\n}*/\n\nexport default {\n  Encrypt: Encrypt\n};",{"version":3,"sources":["C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\libs\\crypto.js"],"names":["JSEncrypt","hexToBytes","hex","bytes","c","length","push","parseInt","substr","bytesToHex","i","toString","join","Encrypt"],"mappings":";AAAA;AACA,SAASA,SAAT,QAA0B,WAA1B,C,CACA;;AAEA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,OAAK,IAAIC,KAAK,GAAG,EAAZ,EAAgBC,CAAC,GAAG,CAAzB,EAA4BA,CAAC,GAAGF,GAAG,CAACG,MAApC,EAA4CD,CAAC,IAAI,CAAjD;AACED,IAAAA,KAAK,CAACG,IAAN,CAAWC,QAAQ,CAACL,GAAG,CAACM,MAAJ,CAAWJ,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAnB;AADF;;AAEA,SAAOD,KAAP;AACD,C,CACD;;;AACA,SAASM,UAAT,CAAoBN,KAApB,EAA2B;AACzB,OAAK,IAAID,GAAG,GAAG,EAAV,EAAcQ,CAAC,GAAG,CAAvB,EAA0BA,CAAC,GAAGP,KAAK,CAACE,MAApC,EAA4CK,CAAC,EAA7C,EAAiD;AAC/CR,IAAAA,GAAG,CAACI,IAAJ,CAAS,CAACH,KAAK,CAACO,CAAD,CAAL,KAAa,CAAd,EAAiBC,QAAjB,CAA0B,EAA1B,CAAT;AACAT,IAAAA,GAAG,CAACI,IAAJ,CAAS,CAACH,KAAK,CAACO,CAAD,CAAL,GAAW,GAAZ,EAAiBC,QAAjB,CAA0B,EAA1B,CAAT;AACD;;AACD,SAAOT,GAAG,CAACU,IAAJ,CAAS,EAAT,CAAP;AACD;;AAAA,C,CAGD;;AACA;;;;;;;;AAOA,eAAe;AACXC,EAAAA,OAAO,EAAPA;AADW,CAAf","sourcesContent":["//import { JSEncrypt } from 'encryptlong'\nimport { JSEncrypt } from 'jsencrypt'\n// Convert a hex string to a byte array  16进制转byte数组\n\nfunction hexToBytes(hex) {\n  for (var bytes = [], c = 0; c < hex.length; c += 2)\n    bytes.push(parseInt(hex.substr(c, 2), 16));\n  return bytes;\n}\n// Convert a byte array to a hex string byte数组转16进制\nfunction bytesToHex(bytes) {\n  for (var hex = [], i = 0; i < bytes.length; i++) {\n    hex.push((bytes[i] >>> 4).toString(16));\n    hex.push((bytes[i] & 0xF).toString(16));\n  }\n  return hex.join(\"\");\n};\n\n\n//加密方法\n/*export function Encrypt(data) {\n    const PUBLIC_KEY = '-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDbqZCwjBRSKd64fM/ortRglY/VIP+qdqB2rk3EKmWQnhwMREqSoUwVnyPQqj61mVguox1rh4LSgyRvAzYJc9FUKvDkcKsUm07qgzUhbS/B6XpdGqLlh+ror/J2CJuwn3KQDfgMg5gb4Bi98yo0CAfOYo3QqrPmXthBbEHuCyvasQIDAQAB-----END PUBLIC KEY-----'\n    let encryptor = new JSEncrypt()\n    encryptor.setPublicKey(PUBLIC_KEY)\n    const rsaData = encryptor.encryptLong(data)\n    return rsaData\n}*/\nexport default {\n    Encrypt\n}\n\n"]}]}