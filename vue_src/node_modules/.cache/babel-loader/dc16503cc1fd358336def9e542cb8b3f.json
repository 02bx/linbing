{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\libs\\crypto.js","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\libs\\crypto.js","mtime":1564283252000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n\nvar CryptoJS = require('crypto-js'); //引用AES源码js\n\n\nvar key = CryptoJS.enc.Utf8.parse('7hs252sz34g12331'); //十六位十六进制数作为秘钥\n\nvar iv = CryptoJS.enc.Utf8.parse('37tAGbwSHDT34348'); //十六位十六进制数作为秘钥偏移量\n//解密方法\n\nexport function Decrypt(word) {\n  var encryptedHexStr = CryptoJS.enc.Hex.parse(word);\n  var srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);\n  var decrypt = CryptoJS.AES.decrypt(srcs, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n  return decryptedStr.toString();\n} //加密方法\n\nexport function Encrypt(word) {\n  var srcs = CryptoJS.enc.Utf8.parse(word);\n  var encrypted = CryptoJS.AES.encrypt(srcs, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  var hexStr = encrypted.ciphertext.toString().toUpperCase();\n  var oldHexStr = CryptoJS.enc.Hex.parse(hexStr); // 将密文转为Base64的字符串\n\n  var base64Str = CryptoJS.enc.Base64.stringify(oldHexStr);\n  return base64Str;\n}\nexport default {\n  Decrypt: Decrypt,\n  Encrypt: Encrypt\n};",null]}