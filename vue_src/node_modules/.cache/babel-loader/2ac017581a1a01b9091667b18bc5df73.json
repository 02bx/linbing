{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\components\\editnote\\editnote.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\components\\editnote\\editnote.vue","mtime":1578482303498},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport http from '@/libs/http';\nimport RSA from '@/libs/crypto';\nimport { getToken } from '@/libs/util';\nexport default {\n  inject: ['reload'],\n  name: 'MarkdownEditor',\n  data: function data() {\n    return {\n      new_notename: '',\n      new_content: '',\n      old_notename: '',\n      old_content: '',\n      flag: '',\n      token: getToken(),\n      publish_flag: '0'\n    };\n  },\n  created: function created() {\n    this.$nextTick(this.getParams());\n  },\n  methods: {\n    getParams: function getParams() {\n      if (this.$route.query.params.notename) {\n        this.new_notename = this.$route.query.params.notename;\n        this.new_content = this.$route.query.params.content;\n        this.old_notename = this.$route.query.params.notename;\n        this.old_content = this.$route.query.params.content;\n      }\n    },\n    handlnotename: function handlnotename() {\n      var _this = this;\n\n      if (this.new_notename == \"\") {\n        this.$Notice.error({\n          title: '笔记名字不能为空',\n          desc: '请输入笔记名字 '\n        });\n      } else {\n        var data = {\n          'type': 'notename',\n          'token': this.token,\n          'data': this.new_notename\n        };\n        data = JSON.stringify(data);\n        var params = {\n          'data': RSA.Encrypt(data)\n        };\n        http.post('/api/query', params).then(function (res) {\n          res.data = eval('(' + res.data + ')');\n\n          switch (res.data.code) {\n            case 'Z1001':\n              _this.$Notice.error({\n                title: '系统异常',\n                desc: '系统发生异常,请稍后再次尝试'\n              });\n\n              break;\n\n            case 'Z1002':\n              _this.$Notice.error({\n                title: '请求异常',\n                desc: '请求异常,请稍后再次尝试'\n              });\n\n              break;\n\n            case 'Z1004':\n              _this.$Notice.error({\n                title: '修改失败',\n                desc: '认证失败,请稍后再次尝试'\n              });\n\n              break;\n\n            case 'Z10010':\n              if (_this.new_notename != _this.old_notename) {\n                _this.flag = '1';\n\n                _this.$Notice.error({\n                  title: '笔记已存在',\n                  desc: '笔记名字已存在,请重新输入笔记名字'\n                });\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        });\n      }\n    },\n    change: function change(status) {\n      if (status) {\n        this.publish_flag = '1';\n      } else {\n        this.publish_flag = '0';\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      if (this.new_notename == \"\") {\n        this.$Notice.error({\n          title: '笔记名字不能为空',\n          desc: '请输入笔记名字 '\n        });\n      } else {\n        if (this.flag == \"1\") {\n          this.$Notice.error({\n            title: '笔记已存在',\n            desc: '笔记名字已存在,请重新输入笔记名字'\n          });\n        } else {\n          if (this.new_content == \"\") {\n            this.$Notice.error({\n              title: '笔记内容不能为空',\n              desc: '请输入笔记内容'\n            });\n          } else {\n            var data = {\n              'token': this.token,\n              'old_notename': this.old_notename,\n              //'old_content': this.old_content,\n              'new_notename': this.new_notename,\n              //'new_content': this.new_content,\n              'publish_flag': this.publish_flag,\n              'trash_flag': '0'\n            };\n            data = JSON.stringify(data);\n            var params = {\n              'data': RSA.Encrypt(data),\n              'old_content': this.old_content,\n              'new_content': this.new_content\n            };\n            http.post('/api/editnote', params).then(function (res) {\n              res.data = eval('(' + res.data + ')');\n\n              switch (res.data.code) {\n                case 'Z1000':\n                  _this2.$Notice.success({\n                    title: '修改成功',\n                    desc: '笔记修改成功,请到笔记列表查看'\n                  });\n\n                  setTimeout(function () {\n                    _this2.$router.push({\n                      path: '/components/notelist'\n                    });\n                  }, 1000);\n                  break;\n\n                case 'Z1001':\n                  _this2.$Notice.error({\n                    title: '系统异常',\n                    desc: '系统发生异常,请稍后再次尝试'\n                  });\n\n                  break;\n\n                case 'Z1002':\n                  _this2.$Notice.error({\n                    title: '系统异常',\n                    desc: '系统发生异常,请稍后再次尝试'\n                  });\n\n                  break;\n\n                case 'Z1004':\n                  _this2.$Notice.error({\n                    title: '修改失败',\n                    desc: '认证失败,请稍后再次尝试'\n                  });\n\n                  break;\n\n                default:\n                  break;\n              }\n            });\n          }\n        }\n      }\n    },\n    $imgAdd: function $imgAdd(pos, $file) {\n      var _this3 = this;\n\n      // 第一步.将图片上传到服务器.\n      var instance = axios.create({\n        withCredentials: true\n      });\n      var formdata = new FormData();\n      formdata.append('file', $file);\n      formdata.append('token', this.token);\n      this.img_file[pos] = $file;\n      instance({\n        url: '/api/upload',\n        method: 'post',\n        data: formdata,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (res) {\n        res.data = eval('(' + res.data + ')');\n\n        switch (res.data.code) {\n          case 'Z10010':\n            _this3.$Notice.success({\n              title: '上传成功',\n              desc: res.data.message\n            });\n\n            _this3.$refs.md.$img2Url(pos, res.data.data);\n\n            break;\n\n          case 'Z1001':\n            _this3.$Notice.error({\n              title: '系统异常',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1004':\n            _this3.$Notice.error({\n              title: '认证失败',\n              desc: '认证失败,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z10011':\n            _this3.$Notice.error({\n              title: '上传异常',\n              desc: '上传失败,请稍候重试!'\n            });\n\n            break;\n\n          case 'Z10012':\n            _this3.$Notice.error({\n              title: '上传异常',\n              desc: '上传文件名为空,请添加文件名'\n            });\n\n            break;\n\n          case 'Z10013':\n            _this3.$Notice.error({\n              title: '上传异常',\n              desc: '上传文件格式不正确,请稍候重试'\n            });\n\n            break;\n\n          default:\n            break;\n        } // 第二步.将返回的url替换到文本原位置![...](0) -> ![...](url)\n\n        /**\n        * $vm 指为mavonEditor实例，可以通过如下两种方式获取\n        * 1. 通过引入对象获取: `import {mavonEditor} from ...` 等方式引入后，`$vm`为`mavonEditor`\n        * 2. 通过$refs获取: html声明ref : `<mavon-editor ref=md ></mavon-editor>，`$vm`为 `this.$refs.md`\n        */\n\n      });\n    },\n    $imgDel: function $imgDel(pos) {\n      delete this.img_file[pos];\n    }\n  }\n};",null]}