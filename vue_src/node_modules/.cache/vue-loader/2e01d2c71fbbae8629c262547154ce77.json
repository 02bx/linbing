{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\src\\view\\components\\trash\\trash_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\src\\view\\components\\trash\\trash_list.vue","mtime":1582615999504},{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\临兵1.0\\vue_src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport RSA  from '@/libs/crypto'\nimport http  from '@/libs/http'\nimport {getToken } from '@/libs/util'\nexport default {\n  inject: ['reload'],\n  name: 'tables_page',\n  data () {\n    return {\n      token: getToken(),\n      page: {\n          pageNum: 1,\n          pageSize: 5,\n          count: 0\n      },\n      columns: [\n        {\n          title: '目标',\n          key: 'target',\n          sortable: true,\n          resizable: true,\n          width: 150\n        },\n        {\n          title: '描述',\n          key: 'description',\n          sortable: true,\n          resizable: true,\n          width: 260\n        },\n        {\n          title: '创建时间', \n          key: 'create_time',\n          resizable: true,\n          width: 260\n        },\n        {\n          title: '漏洞数量',\n          key: 'vulner_number',\n          resizable: true,\n          width: 150\n        },\n        { \n          title: '扫描状态',\n          key: 'scan_status',\n          resizable: true,\n          width: 150\n        },\n        {\n          title: '操作',\n          key: 'action',\n          resizable: true,\n          width: 250,\n          align: 'center',\n          render: (h, params) => {\n            return h('div', [\n                h('Button', {\n                    props: {\n                        type: 'primary',\n                        size: 'small'\n                    },\n                    style: {\n                        marginRight: '20px'\n                    },\n                    on: {\n                        click: () => {\n                            this.show(params)\n                        }\n                    }\n                }, '漏洞详情'),\n                h('Button', {\n                    props: {\n                        type: 'primary',\n                        size: 'small'\n                    },\n                    style: {\n                        marginRight: '20px'\n                    },\n                    on: {\n                        click: () => {\n                            this.restore(params)\n                        }\n                    }\n                }, '恢复'),\n                h('Button', {\n                    props: {\n                        type: 'error',\n                        size: 'small'\n                    },\n                    on: {\n                        click: () => {\n                            this.delete(params)\n                        }\n                    }\n                }, '彻底删除')\n            ]);\n        }\n      }\n      ],\n      tableData: []\n    }\n  },\n  methods: {\n    getTableData () {\n      let data = {\n        'pagenum': this.page.pageNum,\n        'pagesize': this.page.pageSize,\n        'flag': '1',\n        'token': this.token.trim()\n      }\n      data = JSON.stringify(data)\n      let params = {'data': RSA.Encrypt(data)}\n      http.post('/api/targetlist', params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          if (res.data.data.result !== \"\"){\n            this.tableData = res.data.data.result\n          }\n          this.page.count = res.data.data.total\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1004':\n          this.$Notice.error({\n              title: '获取数据失败',\n              desc: '认证失败,请稍后再次尝试'\n          })\n          break\n          case 'Z1009':\n          this.$Notice.info({\n              title: '数据为空',\n              desc: '数据为空,请新建笔记'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    show (params) {\n      this.$router.push({\n        name:'漏洞详情',\n        query:{\n          params : params['row']['target']\n        }\n      })\n    },\n    restore (params) {\n      let flag = {\n        'type': 'target',\n        'data': '0'\n      }\n      let data = {\n        'target': params.row.target,\n        'flag': flag,\n        'token': this.token.trim()\n      }\n      data = JSON.stringify(data)\n      let req_params = {'data': RSA.Encrypt(data)}\n      http.post('/api/setflag', req_params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          this.reload()\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1004':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '认证失败,请稍后再次尝试'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    delete (params) {\n       let flag = {\n         'type': 'target',\n      }\n      let data = {\n        'flag': flag,\n        'target': params.row.target,\n        'token': this.token.trim()\n      }\n      data = JSON.stringify(data)\n      let req_params = {'data': RSA.Encrypt(data)}\n      http.post('/api/delete', req_params).then((res) => {\n        res.data = eval('(' + res.data + ')')\n        switch(res.data.code ){\n          case'Z1000':\n          this.reload()\n          break\n          case 'Z1001':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1002':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n          })\n          break\n          case 'Z1004':\n          this.$Notice.error({\n              title: '请求失败',\n              desc: '认证失败,请稍后再次尝试'\n          })\n          break\n          default:\n          break\n        }\n      })\n    },\n    handlePage (pageNum) {\n      this.page.pageNum = pageNum\n      this.getTableData()\n    },\n    handlePageSize (pageSize) {\n      this.page.pageSize = pageSize\n      this.getTableData()\n    }\n  },\n  mounted () {\n    this.getTableData()\n  },\n}\n",null]}