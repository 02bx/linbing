{"remainingRequest":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\components\\notelist\\notelist.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\src\\view\\components\\notelist\\notelist.vue","mtime":1572693472000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\.babelrc","mtime":1569934280000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dscjh\\Desktop\\note\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AES from '@/libs/crypto';\nimport http from '@/libs/http';\nimport { getToken } from '@/libs/util';\nexport default {\n  inject: ['reload'],\n  name: 'tables_page',\n  data: function data() {\n    var _this = this;\n\n    return {\n      token: getToken(),\n      page: {\n        pageNum: 1,\n        pageSize: 5,\n        count: 0\n      },\n      columns: [{\n        title: '笔记名字',\n        key: 'notename',\n        sortable: true,\n        resizable: true,\n        width: 300\n      }, {\n        title: '创建时间',\n        key: 'time',\n        resizable: true,\n        width: 300\n      }, {\n        title: '操作',\n        key: 'action',\n        width: 300,\n        resizable: true,\n        align: 'center',\n        render: function render(h, params) {\n          return h('div', [h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            style: {\n              marginRight: '20px'\n            },\n            on: {\n              click: function click() {\n                _this.show(params);\n              }\n            }\n          }, '查看'), h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            style: {\n              marginRight: '20px'\n            },\n            on: {\n              click: function click() {\n                _this.edit(params);\n              }\n            }\n          }, '修改'), h('Button', {\n            props: {\n              type: 'error',\n              size: 'small'\n            },\n            on: {\n              click: function click() {\n                _this.remove(params);\n              }\n            }\n          }, '删除')]);\n        }\n      }],\n      tableData: []\n    };\n  },\n  methods: {\n    getTableData: function getTableData() {\n      var _this2 = this;\n\n      var flag = {\n        'type': 'trash',\n        'data': '0'\n      };\n      var data = {\n        'pagenum': this.page.pageNum,\n        'pagesize': this.page.pageSize,\n        'flag': flag,\n        'token': this.token.trim()\n      };\n      data = JSON.stringify(data);\n      var params = {\n        'data': AES.Encrypt(data)\n      };\n      http.post('/api/notelist', params).then(function (res) {\n        res.data = eval('(' + res.data + ')');\n\n        switch (res.data.code) {\n          case 'Z1000':\n            if (res.data.data !== \"\") {\n              _this2.tableData = res.data.data;\n            }\n\n            _this2.page.count = res.data.total;\n            break;\n\n          case 'Z1001':\n            _this2.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1002':\n            _this2.$Notice.error({\n              title: '获取数据失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1004':\n            _this2.$Notice.error({\n              title: '获取数据失败',\n              desc: '认证失败,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1009':\n            _this2.$Notice.info({\n              title: '数据为空',\n              desc: '数据为空,请新建笔记'\n            });\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    },\n    show: function show(params) {\n      this.$router.push({\n        name: '笔记详情',\n        query: {\n          params: params['row']\n        }\n      });\n    },\n    edit: function edit(params) {\n      this.$router.push({\n        name: '修改笔记',\n        query: {\n          params: params['row']\n        }\n      });\n    },\n    remove: function remove(params) {\n      var _this3 = this;\n\n      var flag = {\n        'type': 'trash',\n        'data': '1'\n      };\n      var data = {\n        'notename': AES.Encrypt(params.row.notename),\n        'flag': flag,\n        'token': this.token.trim()\n      };\n      data = JSON.stringify(data);\n      var req_params = {\n        'data': AES.Encrypt(data)\n      };\n      http.post('/api/setflag', req_params).then(function (res) {\n        res.data = eval('(' + res.data + ')');\n\n        switch (res.data.code) {\n          case 'Z1000':\n            _this3.reload();\n\n            break;\n\n          case 'Z1001':\n            _this3.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1002':\n            _this3.$Notice.error({\n              title: '请求失败',\n              desc: '系统发生异常,请稍后再次尝试'\n            });\n\n            break;\n\n          case 'Z1004':\n            _this3.$Notice.error({\n              title: '请求失败',\n              desc: '认证失败,请稍后再次尝试'\n            });\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    },\n    handlePage: function handlePage(pageNum) {\n      this.page.pageNum = pageNum;\n      this.getTableData();\n    },\n    handlePageSize: function handlePageSize(pageSize) {\n      this.page.pageSize = pageSize;\n      this.getTableData();\n    }\n  },\n  mounted: function mounted() {\n    this.getTableData();\n  }\n};",null]}